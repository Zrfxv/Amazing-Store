/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Color;
import java.awt.color.ColorSpace;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author muham
 */
public class CashierPanel extends javax.swing.JFrame {

    private ResultSet hasil;
    private Boolean saveMode;
    private DefaultTableModel memberTable, transactionTable, productTable;
    private Color klik, utama;
    private boolean dataditemukan = false;

    /**
     * Creates new form CashierPanel
     */
    public CashierPanel() {
        initComponents();

        klik = Color.BLUE;
        utama = new Color(250, 128, 114);

        tvUser.setForeground(utama);
        tvTransaction.setForeground(utama);
        tvMember.setForeground(utama);
        tvProduct.setForeground(utama);

        //table model
        memberTable = (DefaultTableModel) TableMember.getModel();
        productTable = (DefaultTableModel) TableProduct.getModel();
        transactionTable = (DefaultTableModel) TableTransaction.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        MenuPanel = new javax.swing.JPanel();
        tvUser = new javax.swing.JLabel();
        tvTransaction = new javax.swing.JLabel();
        tvMember = new javax.swing.JLabel();
        tvProduct = new javax.swing.JLabel();
        tvAbout = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        welcomePanel = new javax.swing.JPanel();
        tvWelcome = new javax.swing.JLabel();
        imgWelcome = new javax.swing.JLabel();
        ProfilePanel = new javax.swing.JPanel();
        tfNamaProfile = new javax.swing.JTextField();
        tfPasswordProfile = new javax.swing.JPasswordField();
        tfUsernameProfile = new javax.swing.JTextField();
        cbGenderProfile = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        taAlamatprofile = new javax.swing.JTextArea();
        tfNoTelpProfile = new javax.swing.JTextField();
        btnSimpanProfile = new javax.swing.JButton();
        btnUbahProfile = new javax.swing.JButton();
        btnBatalProfile = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        taProfile = new javax.swing.JTextArea();
        imgTransaction = new javax.swing.JLabel();
        transaksiPanel = new javax.swing.JPanel();
        tfJumlah = new javax.swing.JTextField();
        tfCustomerId = new javax.swing.JTextField();
        tfInvoiceNumber = new javax.swing.JTextField();
        tvNamaProduk = new javax.swing.JLabel();
        tvHarga = new javax.swing.JLabel();
        tvStok = new javax.swing.JLabel();
        tfProductId = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableTransaction = new javax.swing.JTable();
        tvTotalHarga = new javax.swing.JLabel();
        tfBayar = new javax.swing.JTextField();
        tvKembalian = new javax.swing.JLabel();
        btntransaksiBatal = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        tvData = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        memberRegisterPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taAlamatMember = new javax.swing.JTextArea();
        tfNoTelpMember = new javax.swing.JTextField();
        tfMemberID = new javax.swing.JTextField();
        tfNamaMember = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        TableMember = new javax.swing.JTable();
        btnBaruMemeber = new javax.swing.JButton();
        btnSimpanMember = new javax.swing.JButton();
        cbKelaminMember = new javax.swing.JComboBox<>();
        btnUbahMember = new javax.swing.JButton();
        btnHapusMember = new javax.swing.JButton();
        btnBatalMember = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        InputPanel = new javax.swing.JPanel();
        tfProductidProduct = new javax.swing.JTextField();
        tfJenisProduct = new javax.swing.JTextField();
        tfNamaProduct = new javax.swing.JTextField();
        tfMerekProduct = new javax.swing.JTextField();
        tfStockProduct = new javax.swing.JTextField();
        tfHargaProduct = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        TableProduct = new javax.swing.JTable();
        btnBaruPrduct = new javax.swing.JButton();
        btnSimpanProduct = new javax.swing.JButton();
        btnUbahProduct = new javax.swing.JButton();
        btnHapusProduct = new javax.swing.JButton();
        btnBatalProduct = new javax.swing.JButton();
        imgProduct = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MenuPanel.setBackground(new java.awt.Color(255, 255, 255));
        MenuPanel.setForeground(new java.awt.Color(255, 255, 255));

        tvUser.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tvUser.setForeground(new java.awt.Color(250, 128, 114));
        tvUser.setText("Hi, User");
        tvUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tvUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvUserMouseClicked(evt);
            }
        });

        tvTransaction.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tvTransaction.setForeground(new java.awt.Color(250, 128, 114));
        tvTransaction.setText(" Transaction");
        tvTransaction.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tvTransaction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvTransactionMouseClicked(evt);
            }
        });

        tvMember.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tvMember.setForeground(new java.awt.Color(250, 128, 114));
        tvMember.setText("Member");
        tvMember.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tvMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvMemberMouseClicked(evt);
            }
        });

        tvProduct.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tvProduct.setForeground(new java.awt.Color(250, 128, 114));
        tvProduct.setText("Product");
        tvProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tvProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvProductMouseClicked(evt);
            }
        });

        tvAbout.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tvAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/logo.png"))); // NOI18N
        tvAbout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tvAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvAboutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tvAboutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tvAboutMouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(250, 128, 114));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Logout");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout MenuPanelLayout = new javax.swing.GroupLayout(MenuPanel);
        MenuPanel.setLayout(MenuPanelLayout);
        MenuPanelLayout.setHorizontalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tvAbout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 327, Short.MAX_VALUE)
                .addComponent(tvTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(tvProduct)
                .addGap(40, 40, 40)
                .addComponent(tvMember)
                .addGap(210, 210, 210)
                .addComponent(tvUser, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        MenuPanelLayout.setVerticalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tvProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MenuPanelLayout.createSequentialGroup()
                        .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tvTransaction, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tvAbout, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tvMember, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tvUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(MenuPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 60));

        mainPanel.setBackground(new java.awt.Color(51, 255, 153));
        mainPanel.setLayout(new java.awt.CardLayout());

        welcomePanel.setBackground(new java.awt.Color(255, 255, 255));
        welcomePanel.setLayout(null);

        tvWelcome.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        tvWelcome.setForeground(new java.awt.Color(255, 255, 255));
        tvWelcome.setText("Your Name");
        welcomePanel.add(tvWelcome);
        tvWelcome.setBounds(40, 280, 430, 60);

        imgWelcome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/welcome.png"))); // NOI18N
        welcomePanel.add(imgWelcome);
        imgWelcome.setBounds(0, 0, 1150, 650);

        mainPanel.add(welcomePanel, "card2");

        ProfilePanel.setBackground(new java.awt.Color(51, 255, 204));
        ProfilePanel.setLayout(null);

        tfNamaProfile.setBorder(null);
        tfNamaProfile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNamaProfileKeyTyped(evt);
            }
        });
        ProfilePanel.add(tfNamaProfile);
        tfNamaProfile.setBounds(300, 220, 240, 33);

        tfPasswordProfile.setBorder(null);
        tfPasswordProfile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPasswordProfileKeyTyped(evt);
            }
        });
        ProfilePanel.add(tfPasswordProfile);
        tfPasswordProfile.setBounds(300, 160, 240, 33);

        tfUsernameProfile.setBorder(null);
        tfUsernameProfile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfUsernameProfileKeyTyped(evt);
            }
        });
        ProfilePanel.add(tfUsernameProfile);
        tfUsernameProfile.setBounds(300, 100, 240, 33);

        cbGenderProfile.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jenis Kelamin", "Laki-Laki", "Perempuan" }));
        cbGenderProfile.setEnabled(false);
        ProfilePanel.add(cbGenderProfile);
        cbGenderProfile.setBounds(300, 280, 230, 30);

        taAlamatprofile.setColumns(20);
        taAlamatprofile.setRows(5);
        taAlamatprofile.setBorder(null);
        taAlamatprofile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                taAlamatprofileKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(taAlamatprofile);

        ProfilePanel.add(jScrollPane1);
        jScrollPane1.setBounds(300, 330, 220, 150);

        tfNoTelpProfile.setBorder(null);
        tfNoTelpProfile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNoTelpProfileKeyTyped(evt);
            }
        });
        ProfilePanel.add(tfNoTelpProfile);
        tfNoTelpProfile.setBounds(300, 500, 230, 33);

        btnSimpanProfile.setText("Simpan");
        btnSimpanProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanProfileActionPerformed(evt);
            }
        });
        ProfilePanel.add(btnSimpanProfile);
        btnSimpanProfile.setBounds(710, 470, 90, 40);

        btnUbahProfile.setText("Ubah");
        btnUbahProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahProfileActionPerformed(evt);
            }
        });
        ProfilePanel.add(btnUbahProfile);
        btnUbahProfile.setBounds(590, 470, 90, 40);

        btnBatalProfile.setText("Batal");
        btnBatalProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalProfileActionPerformed(evt);
            }
        });
        ProfilePanel.add(btnBatalProfile);
        btnBatalProfile.setBounds(820, 470, 90, 40);

        taProfile.setEditable(false);
        taProfile.setColumns(20);
        taProfile.setRows(5);
        jScrollPane7.setViewportView(taProfile);

        ProfilePanel.add(jScrollPane7);
        jScrollPane7.setBounds(590, 100, 480, 350);

        imgTransaction.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        imgTransaction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Profile.png"))); // NOI18N
        ProfilePanel.add(imgTransaction);
        imgTransaction.setBounds(0, 0, 1155, 650);

        mainPanel.add(ProfilePanel, "card3");

        transaksiPanel.setBackground(new java.awt.Color(255, 255, 0));
        transaksiPanel.setLayout(null);

        tfJumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfJumlahActionPerformed(evt);
            }
        });
        tfJumlah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfJumlahKeyPressed(evt);
            }
        });
        transaksiPanel.add(tfJumlah);
        tfJumlah.setBounds(890, 120, 129, 30);

        tfCustomerId.setBorder(null);
        tfCustomerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCustomerIdActionPerformed(evt);
            }
        });
        tfCustomerId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfCustomerIdKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfCustomerIdKeyTyped(evt);
            }
        });
        transaksiPanel.add(tfCustomerId);
        tfCustomerId.setBounds(716, 20, 160, 30);

        tfInvoiceNumber.setBorder(null);
        tfInvoiceNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfInvoiceNumberKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfInvoiceNumberKeyTyped(evt);
            }
        });
        transaksiPanel.add(tfInvoiceNumber);
        tfInvoiceNumber.setBounds(280, 20, 170, 30);

        tvNamaProduk.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        tvNamaProduk.setForeground(new java.awt.Color(255, 255, 255));
        tvNamaProduk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tvNamaProduk.setText("Nama Produk");
        transaksiPanel.add(tvNamaProduk);
        tvNamaProduk.setBounds(250, 120, 300, 40);

        tvHarga.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        tvHarga.setForeground(new java.awt.Color(255, 255, 255));
        tvHarga.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tvHarga.setText("Harga");
        transaksiPanel.add(tvHarga);
        tvHarga.setBounds(560, 120, 190, 40);

        tvStok.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        tvStok.setForeground(new java.awt.Color(255, 255, 255));
        tvStok.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tvStok.setText("Stok");
        transaksiPanel.add(tvStok);
        tvStok.setBounds(780, 120, 60, 40);

        tfProductId.setBorder(null);
        tfProductId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfProductIdKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfProductIdKeyTyped(evt);
            }
        });
        transaksiPanel.add(tfProductId);
        tfProductId.setBounds(50, 130, 160, 30);

        TableTransaction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Product", "Nama Product", "Jumlah", "Harga Satuan", "Total Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableTransaction.setOpaque(false);
        jScrollPane2.setViewportView(TableTransaction);

        transaksiPanel.add(jScrollPane2);
        jScrollPane2.setBounds(40, 190, 1070, 280);

        tvTotalHarga.setText("jLabel21");
        transaksiPanel.add(tvTotalHarga);
        tvTotalHarga.setBounds(890, 490, 70, 14);

        tfBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBayarActionPerformed(evt);
            }
        });
        tfBayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfBayarKeyPressed(evt);
            }
        });
        transaksiPanel.add(tfBayar);
        tfBayar.setBounds(890, 560, 170, 20);

        tvKembalian.setText("label");
        transaksiPanel.add(tvKembalian);
        tvKembalian.setBounds(890, 610, 230, 14);

        btntransaksiBatal.setText("Transaksi Batal");
        btntransaksiBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntransaksiBatalActionPerformed(evt);
            }
        });
        transaksiPanel.add(btntransaksiBatal);
        btntransaksiBatal.setBounds(221, 527, 105, 40);

        jButton4.setText("Transaksi Selesai");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        transaksiPanel.add(jButton4);
        jButton4.setBounds(358, 527, 113, 40);

        tvData.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        transaksiPanel.add(tvData);
        tvData.setBounds(160, 600, 240, 30);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/TransactionPanel.png"))); // NOI18N
        transaksiPanel.add(jLabel9);
        jLabel9.setBounds(0, 0, 1330, 650);

        mainPanel.add(transaksiPanel, "card4");

        memberRegisterPanel.setBackground(new java.awt.Color(0, 255, 0));
        memberRegisterPanel.setLayout(null);

        taAlamatMember.setColumns(20);
        taAlamatMember.setRows(5);
        taAlamatMember.setBorder(null);
        taAlamatMember.setOpaque(false);
        jScrollPane3.setViewportView(taAlamatMember);

        memberRegisterPanel.add(jScrollPane3);
        jScrollPane3.setBounds(290, 290, 220, 140);

        tfNoTelpMember.setBorder(null);
        tfNoTelpMember.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNoTelpMemberKeyTyped(evt);
            }
        });
        memberRegisterPanel.add(tfNoTelpMember);
        tfNoTelpMember.setBounds(300, 450, 210, 40);

        tfMemberID.setBorder(null);
        tfMemberID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMemberIDActionPerformed(evt);
            }
        });
        tfMemberID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfMemberIDKeyTyped(evt);
            }
        });
        memberRegisterPanel.add(tfMemberID);
        tfMemberID.setBounds(290, 110, 230, 40);

        tfNamaMember.setBorder(null);
        tfNamaMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNamaMemberActionPerformed(evt);
            }
        });
        memberRegisterPanel.add(tfNamaMember);
        tfNamaMember.setBounds(290, 170, 234, 40);

        TableMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member Id", "Nama", "Jenis Kelamin", "Alamat", "No Telpon"
            }
        ));
        TableMember.setGridColor(new java.awt.Color(0, 102, 255));
        TableMember.setOpaque(false);
        TableMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMemberMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TableMember);

        memberRegisterPanel.add(jScrollPane4);
        jScrollPane4.setBounds(592, 110, 500, 230);

        btnBaruMemeber.setText("Baru");
        btnBaruMemeber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaruMemeberActionPerformed(evt);
            }
        });
        memberRegisterPanel.add(btnBaruMemeber);
        btnBaruMemeber.setBounds(590, 360, 90, 40);

        btnSimpanMember.setText("Simpan");
        btnSimpanMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanMemberActionPerformed(evt);
            }
        });
        memberRegisterPanel.add(btnSimpanMember);
        btnSimpanMember.setBounds(690, 360, 90, 40);

        cbKelaminMember.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jenis Kelamin", "Laki-Laki", "Perempuan" }));
        cbKelaminMember.setBorder(null);
        cbKelaminMember.setEnabled(false);
        cbKelaminMember.setOpaque(false);
        memberRegisterPanel.add(cbKelaminMember);
        cbKelaminMember.setBounds(290, 230, 230, 30);

        btnUbahMember.setText("Ubah");
        btnUbahMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahMemberActionPerformed(evt);
            }
        });
        memberRegisterPanel.add(btnUbahMember);
        btnUbahMember.setBounds(790, 360, 90, 40);

        btnHapusMember.setText("Hapus");
        btnHapusMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusMemberActionPerformed(evt);
            }
        });
        memberRegisterPanel.add(btnHapusMember);
        btnHapusMember.setBounds(890, 360, 90, 40);

        btnBatalMember.setText("Batal");
        btnBatalMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalMemberActionPerformed(evt);
            }
        });
        memberRegisterPanel.add(btnBatalMember);
        btnBatalMember.setBounds(990, 360, 90, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/MemberPanel.png"))); // NOI18N
        jLabel1.setText("Member id");
        memberRegisterPanel.add(jLabel1);
        jLabel1.setBounds(0, 0, 1150, 650);

        mainPanel.add(memberRegisterPanel, "card5");

        InputPanel.setBackground(new java.awt.Color(51, 153, 255));
        InputPanel.setLayout(null);

        tfProductidProduct.setBorder(null);
        tfProductidProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfProductidProductKeyTyped(evt);
            }
        });
        InputPanel.add(tfProductidProduct);
        tfProductidProduct.setBounds(280, 117, 202, 30);

        tfJenisProduct.setBorder(null);
        InputPanel.add(tfJenisProduct);
        tfJenisProduct.setBounds(280, 280, 202, 40);

        tfNamaProduct.setBorder(null);
        InputPanel.add(tfNamaProduct);
        tfNamaProduct.setBounds(280, 170, 202, 30);

        tfMerekProduct.setBorder(null);
        InputPanel.add(tfMerekProduct);
        tfMerekProduct.setBounds(280, 230, 202, 30);

        tfStockProduct.setBorder(null);
        tfStockProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfStockProductKeyTyped(evt);
            }
        });
        InputPanel.add(tfStockProduct);
        tfStockProduct.setBounds(280, 340, 202, 30);

        tfHargaProduct.setBorder(null);
        tfHargaProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfHargaProductKeyTyped(evt);
            }
        });
        InputPanel.add(tfHargaProduct);
        tfHargaProduct.setBounds(280, 400, 202, 30);

        TableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Id", "Nama", "Merek", "Jenis", "Stock", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableProductMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(TableProduct);

        InputPanel.add(jScrollPane5);
        jScrollPane5.setBounds(560, 100, 530, 330);

        btnBaruPrduct.setText("Baru");
        btnBaruPrduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaruPrductActionPerformed(evt);
            }
        });
        InputPanel.add(btnBaruPrduct);
        btnBaruPrduct.setBounds(560, 450, 90, 40);

        btnSimpanProduct.setText("Simpan");
        btnSimpanProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanProductActionPerformed(evt);
            }
        });
        InputPanel.add(btnSimpanProduct);
        btnSimpanProduct.setBounds(680, 450, 80, 40);

        btnUbahProduct.setText("Ubah");
        btnUbahProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahProductActionPerformed(evt);
            }
        });
        InputPanel.add(btnUbahProduct);
        btnUbahProduct.setBounds(790, 450, 80, 40);

        btnHapusProduct.setText("Hapus");
        btnHapusProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusProductActionPerformed(evt);
            }
        });
        InputPanel.add(btnHapusProduct);
        btnHapusProduct.setBounds(900, 450, 80, 40);

        btnBatalProduct.setText("Batal");
        btnBatalProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalProductActionPerformed(evt);
            }
        });
        InputPanel.add(btnBatalProduct);
        btnBatalProduct.setBounds(1010, 450, 80, 40);

        imgProduct.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        imgProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/ProductPanel.png"))); // NOI18N
        InputPanel.add(imgProduct);
        imgProduct.setBounds(0, 0, 1150, 650);

        mainPanel.add(InputPanel, "card6");

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 56, 1150, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        dispose();
        Login.summonLoginPanel();

    }//GEN-LAST:event_formWindowClosing

    private void tvProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvProductMouseClicked

        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();

        mainPanel.add(InputPanel);
        mainPanel.repaint();
        mainPanel.revalidate();

        tvUser.setForeground(utama);
        tvTransaction.setForeground(utama);
        tvMember.setForeground(utama);
        tvProduct.setForeground(klik);
        tvAbout.setForeground(utama);

        productPanel();

        refreshData(2);

    }//GEN-LAST:event_tvProductMouseClicked

    private void tvMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvMemberMouseClicked
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();

        mainPanel.add(memberRegisterPanel);
        mainPanel.repaint();
        mainPanel.revalidate();

        tvUser.setForeground(utama);
        tvTransaction.setForeground(utama);
        tvMember.setForeground(klik);
        tvProduct.setForeground(utama);
        tvAbout.setForeground(utama);

        member();
        refreshData(1);
    }//GEN-LAST:event_tvMemberMouseClicked

    private void tvTransactionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvTransactionMouseClicked

        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();

        mainPanel.add(transaksiPanel);
        tfInvoiceNumber.requestFocus();

        mainPanel.repaint();
        mainPanel.revalidate();

        tvUser.setForeground(utama);
        tvTransaction.setForeground(klik);
        tvMember.setForeground(utama);
        tvProduct.setForeground(utama);
        tvAbout.setForeground(utama);

    }//GEN-LAST:event_tvTransactionMouseClicked

    private void tvUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvUserMouseClicked

        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();

        mainPanel.add(ProfilePanel);
        mainPanel.repaint();
        mainPanel.revalidate();

        ProfilePanel.setVisible(true);
        MenuPanel.setVisible(true);
        tvUser.setForeground(klik);
        tvTransaction.setForeground(utama);
        tvMember.setForeground(utama);
        tvProduct.setForeground(utama);
        tvAbout.setForeground(utama);

        refreshData(3);
        member();
    }//GEN-LAST:event_tvUserMouseClicked

    private void tfUsernameProfileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUsernameProfileKeyTyped

        if (tfUsernameProfile.getText().length() > 20) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Username Melebihi 20 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_tfUsernameProfileKeyTyped

    private void tfPasswordProfileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPasswordProfileKeyTyped
        if (String.valueOf(tfPasswordProfile.getPassword()).length() == 20) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Password Melebihi 20 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tfPasswordProfileKeyTyped

    private void tfNamaProfileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNamaProfileKeyTyped
        if (tfNamaProfile.getText().length() > 30) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Nama Melebihi 30 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tfNamaProfileKeyTyped

    private void taAlamatprofileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taAlamatprofileKeyTyped
        if (taAlamatprofile.getText().length() > 150) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Alamat Melebihi 150 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_taAlamatprofileKeyTyped

    private void tfNoTelpProfileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNoTelpProfileKeyTyped

        char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

        if (tfNoTelpProfile.getText().length() > 13) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "No Telp Melebihi 13 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);

            //buat perkondisian yang busa di inputkan angka ini kan masih bebas angka dan huruf
        }
    }//GEN-LAST:event_tfNoTelpProfileKeyTyped

    private void tvAboutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvAboutMouseEntered
        tvAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/logoGlow.png")));
    }//GEN-LAST:event_tvAboutMouseEntered

    private void tvAboutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvAboutMouseExited
        tvAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/logo.png")));
    }//GEN-LAST:event_tvAboutMouseExited

    private void tvAboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvAboutMouseClicked
        AboutPanel.summonAboutPanel();
    }//GEN-LAST:event_tvAboutMouseClicked

    private void member() {
        btnBaruMemeber.setEnabled(true);
        btnSimpanMember.setEnabled(false);
        btnBatalMember.setEnabled(false);
        btnHapusMember.setEnabled(false);
        btnUbahMember.setEnabled(false);

        tfMemberID.setEditable(false);
        tfNamaMember.setEditable(false);
        cbKelaminMember.setEditable(false);
        taAlamatMember.setEditable(false);
        tfNoTelpMember.setEditable(false);
    }

    private void profile() {
        tfUsernameProfile.setEditable(false);
        tfPasswordProfile.setEditable(false);
        tfNamaProfile.setEditable(false);

        cbGenderProfile.setEditable(false);
        taAlamatprofile.setEditable(false);
        tfNoTelpProfile.setEditable(false);

        btnBatalProfile.setEnabled(false);
        btnSimpanProfile.setEnabled(false);
        btnUbahProfile.setEnabled(true);

    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tvUser.setText("Hi, " + Encapsulation.getUsername());

        tvWelcome.setText(Encapsulation.getName());
        enableMember(1);
        enableInputPanel(1);
        enableProfile(2);
        Date();

    }//GEN-LAST:event_formWindowOpened

    private void productPanel() {
        tfProductidProduct.setEditable(false);
        tfStockProduct.setEditable(false);
        tfHargaProduct.setEditable(false);
        tfMerekProduct.setEditable(false);
        tfJenisProduct.setEditable(false);
        tfNamaProduct.setEditable(false);

        btnBaruPrduct.setEnabled(true);
        btnBatalProduct.setEnabled(false);
        btnSimpanProduct.setEnabled(false);
        btnUbahProduct.setEnabled(false);
        btnHapusProduct.setEnabled(false);

    }

    private void tfProductIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfProductIdKeyTyped

        char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE || angka == KeyEvent.VK_ENTER)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

        if (tfProductId.getText().length() == 13) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Product Id Melebihi 13 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_tfProductIdKeyTyped

    private void tfInvoiceNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfInvoiceNumberKeyTyped

        char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE || angka == KeyEvent.VK_ENTER)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

        if (tfInvoiceNumber.getText().length() == 10) {
            evt.consume();

            JOptionPane.showMessageDialog(this, "Invoice Number Melebihi 10 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfCustomerId.requestFocus();
        }

    }//GEN-LAST:event_tfInvoiceNumberKeyTyped

    private void tfCustomerIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCustomerIdKeyTyped

        char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE || angka == KeyEvent.VK_ENTER)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

        if (tfCustomerId.getText().length() == 5) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Customer Id Melebihi 5 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfProductId.requestFocus();
        }

    }//GEN-LAST:event_tfCustomerIdKeyTyped

    private void tfMemberIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMemberIDKeyTyped
        char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE || angka == KeyEvent.VK_ENTER)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

        if (tfMemberID.getText().length() == 5) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Customer Id Melebihi 5 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_tfMemberIDKeyTyped


    private void btnBaruMemeberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaruMemeberActionPerformed
        enableMember(2);

        saveMode = true;
    }//GEN-LAST:event_btnBaruMemeberActionPerformed

    private void btnBatalMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalMemberActionPerformed
        enableMember(1);

    }//GEN-LAST:event_btnBatalMemberActionPerformed

    private void btnHapusMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusMemberActionPerformed

        int konfirmasi = JOptionPane.showConfirmDialog(this,
                "Apakah Anda Yakin?\n Dengan Menghapus Member akan Menghilangkan\n Seluruh Data Transaksi yang ada",
                "Konfirmasi",
                JOptionPane.YES_NO_OPTION);
        if (konfirmasi == 0) {

            try {
                AppDatabase.perintah.execute("delete from customer "
                        + "where customer_id ='" + tfMemberID.getText() + "';");
                refreshData(1);
            } catch (SQLException e) {
                System.err.println("Query delete Member gagal");
            }

            enableMember(5);
            refreshData(1);
        }

    }//GEN-LAST:event_btnHapusMemberActionPerformed

    private void btnSimpanMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanMemberActionPerformed

        if (tfMemberID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Data Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);

        } else if (tfNamaMember.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Data Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);

        } else if (cbKelaminMember.getSelectedItem().equals("Pilih Jenis Kelamin")) {
            JOptionPane.showMessageDialog(this, " Data Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
        } else if (taAlamatMember.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Data Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);

        } else if (tfNoTelpMember.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Data Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
        } else {

        }

        //query simpan 
        try {
            if (saveMode == true) {
                AppDatabase.perintah.executeUpdate("insert into customer values "
                        + "('" + tfMemberID.getText() + "',"
                        + "'" + tfNamaMember.getText() + "',"
                        + "'" + cbKelaminMember.getSelectedItem() + " ',"
                        + "'" + taAlamatMember.getText() + " ',"
                        + "'" + tfNoTelpMember.getText() + "')");
                 refreshData(1);
         enableMember(3);
            } else {
                AppDatabase.perintah.executeUpdate("update customer set "
                        + "name = '" + tfNamaMember.getText() + "',"
                        + "gender = '" + cbKelaminMember.getSelectedItem() + "',"
                        + "address = '" + taAlamatMember.getText() + "' ,"
                        + "telp = '" + tfNoTelpMember.getText() + "' "
                        + "where customer_id = '" + tfMemberID.getText() + "';");
                 refreshData(1);
         enableMember(3);
            
                System.out.println("Query update berhasil");
                    
           
            }
        } catch (SQLException e) {
               JOptionPane.showMessageDialog(this,
                    "Member Id Sudah Ada , Mohon Di Ganti", "Konfirmasi",
                    JOptionPane.ERROR_MESSAGE);
                 tfMemberID.requestFocus();
                 tfMemberID.setText("");
                    
           
        }

        


    }//GEN-LAST:event_btnSimpanMemberActionPerformed

    private void btnUbahMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahMemberActionPerformed

        enableMember(4);

        saveMode = false;

    }//GEN-LAST:event_btnUbahMemberActionPerformed


    private void btnBaruPrductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaruPrductActionPerformed
        enableInputPanel(2);
        saveMode = true;

    }//GEN-LAST:event_btnBaruPrductActionPerformed

    private void btnSimpanProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanProductActionPerformed

        if (tfProductidProduct.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Data Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfProductidProduct.requestFocus();

        } else if (tfNamaProduct.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Data Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfNamaProduct.requestFocus();

        } else if (tfMerekProduct.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Data Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfMerekProduct.requestFocus();

        } else if (tfJenisProduct.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Data Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfJenisProduct.requestFocus();

        } else if (tfStockProduct.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Data Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfStockProduct.requestFocus();

        } else if (tfHargaProduct.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Data Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfHargaProduct.requestFocus();

        } else {

        }

        //query simpan product
        try {
            if (saveMode == true) {
                AppDatabase.perintah.executeUpdate("insert into product values "
                        + "('" + tfProductidProduct.getText() + "',"
                        + "'" + tfNamaProduct.getText() + "',"
                        + "'" + tfMerekProduct.getText() + " ',"
                        + "'" + tfJenisProduct.getText() + " ',"
                        + "'" + tfStockProduct.getText() + " ',"
                        + "'" + tfHargaProduct.getText() + "')");
                enableInputPanel(3);
                refreshData(2);
                bersihkan();
            } else {
                AppDatabase.perintah.executeUpdate("update product set "
                        + "name = '" + tfNamaProduct.getText() + "',"
                        + "brand = '" + tfMerekProduct.getText() + "',"
                        + "type = '" + tfJenisProduct.getText() + "' ,"
                        + "stok = '" + tfStockProduct.getText() + "' ,"
                        + "price = '" + tfHargaProduct.getText() + "' "
                        + "where product_id = '" + tfProductidProduct.getText() + "';");
                enableInputPanel(3);
                refreshData(2);
                bersihkan();
            }
        } catch (SQLException e) {

            JOptionPane.showMessageDialog(this,
                    "Produc Id Sudah Ada , Mohon Di Ganti", "Konfirmasi",
                    JOptionPane.ERROR_MESSAGE);
            tfProductidProduct.setText("");
            tfProductidProduct.requestFocus();


            
        }


    }//GEN-LAST:event_btnSimpanProductActionPerformed

    private void btnBatalProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalProductActionPerformed
        enableInputPanel(1);

    }//GEN-LAST:event_btnBatalProductActionPerformed

    private void TableMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMemberMouseClicked
        enableMember(6);

        tfMemberID.setText(memberTable.getValueAt(TableMember.getSelectedRow(), 0).toString());
        tfNamaMember.setText(memberTable.getValueAt(TableMember.getSelectedRow(), 1).toString());
        cbKelaminMember.setSelectedItem(memberTable.getValueAt(TableMember.getSelectedRow(), 2).toString());
        taAlamatMember.setText(memberTable.getValueAt(TableMember.getSelectedRow(), 3).toString());
        tfNoTelpMember.setText(memberTable.getValueAt(TableMember.getSelectedRow(), 4).toString());
        
        
        
        
        
    }//GEN-LAST:event_TableMemberMouseClicked

    private void btnSimpanProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanProfileActionPerformed

        // query simpan 
        try {
            AppDatabase.perintah.executeUpdate("update employee set "
                    + "password = '" + String.valueOf(tfPasswordProfile.getPassword()) + "',"
                    + "name = '" + tfNamaProfile.getText() + "' ,"
                    + "gender = '" + cbGenderProfile.getSelectedItem() + "' ,"
                    + "address = '" + taAlamatprofile.getText() + "' ,"
                    + "telp = '" + tfNoTelpProfile.getText() + "' "
                    + "where username = '" + tfUsernameProfile.getText() + "';");
             JOptionPane.showMessageDialog(this, "Akun Sudah Di Perbaruhi" ,"Konfirmasi", JOptionPane.INFORMATION_MESSAGE);
               
        } catch (SQLException e) {
            
            
        }

        enableProfile(3);

        refreshData(3);

    }//GEN-LAST:event_btnSimpanProfileActionPerformed

    private void tfProductidProductKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfProductidProductKeyTyped

        char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE || angka == KeyEvent.VK_ENTER)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

        if (tfProductidProduct.getText().length() == 5) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Product Id Melebihi 5 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfNamaProduct.requestFocus();

        }
    }//GEN-LAST:event_tfProductidProductKeyTyped

    private void tfMemberIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMemberIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMemberIDActionPerformed

    private void TableProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableProductMouseClicked
        enableInputPanel(6);
        tfProductidProduct.setText(productTable.getValueAt(TableProduct.getSelectedRow(), 0).toString());
        tfNamaProduct.setText(productTable.getValueAt(TableProduct.getSelectedRow(), 1).toString());
        tfMerekProduct.setText(productTable.getValueAt(TableProduct.getSelectedRow(), 2).toString());
        tfJenisProduct.setText(productTable.getValueAt(TableProduct.getSelectedRow(), 3).toString());
        tfStockProduct.setText(productTable.getValueAt(TableProduct.getSelectedRow(), 4).toString());
        tfHargaProduct.setText(productTable.getValueAt(TableProduct.getSelectedRow(), 5).toString());

    }//GEN-LAST:event_TableProductMouseClicked

    private void btnUbahProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahProductActionPerformed
        enableInputPanel(4);
        saveMode = false;

    }//GEN-LAST:event_btnUbahProductActionPerformed

    private void btnHapusProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusProductActionPerformed

        int konfirmasi = JOptionPane.showConfirmDialog(this,
                "Apakah Anda Yakin?\n Dengan Menghapus Product akan Menghilangkan\n Seluruh Data Transaksi dengan\n Produk yang bersangkutan",
                "Konfirmasi",
                JOptionPane.YES_NO_OPTION);
        if (konfirmasi == 0) {
            try {
                AppDatabase.perintah.execute("delete from product "
                        + "where product_id ='" + tfProductidProduct.getText() + "';");
                refreshData(2);
                bersihkan();
               
            } catch (SQLException e) {
                System.err.println("Query delete Member gagal");
            }
        }

        enableInputPanel(5);
    }//GEN-LAST:event_btnHapusProductActionPerformed


    private void btnUbahProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahProfileActionPerformed
        enableProfile(1);

        refreshData(4);
    }//GEN-LAST:event_btnUbahProfileActionPerformed

    private void btnBatalProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalProfileActionPerformed
        enableProfile(4);
    }//GEN-LAST:event_btnBatalProfileActionPerformed

    private void tfProductIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfProductIdKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                hasil = AppDatabase.perintah.executeQuery("select name, brand, price, stok from product "
                        + "where product_id ='" + tfProductId.getText() + "'; ");
                hasil.next();
                tvNamaProduk.setText(hasil.getString("brand") + hasil.getString("name"));
                tvHarga.setText("Rp." + hasil.getString("price"));
                tvStok.setText(hasil.getString("stok"));
            } catch (SQLException e) {
                 JOptionPane.showMessageDialog(this, "Customer Id Tidak Ditemukan", "Informasi", JOptionPane.ERROR_MESSAGE);
                tfProductId.setText("");
            }
            tfJumlah.requestFocus();
            tfJumlah.setEditable(true);
        }
    }//GEN-LAST:event_tfProductIdKeyPressed

    private void tfCustomerIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCustomerIdKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                AppDatabase.perintah.executeUpdate("insert into invoice values "
                        + "('" + tfInvoiceNumber.getText() + "', '"
                        + Encapsulation.getUsername() + "' ,'"
                        + tfCustomerId.getText() + "');");
                tfInvoiceNumber.setEditable(false);
                tfCustomerId.setEditable(false);
                tfProductId.requestFocus();
            } catch (SQLException e) {
//               JOptionPane.showInputDialog(this,"Customer Id Tidak Ditemukan" , "Informasi",JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(this, "Customer Id Tidak Ditemukan", "Informasi", JOptionPane.ERROR_MESSAGE);
                tfCustomerId.requestFocus();
                bersihkan();
            }

        }
    }//GEN-LAST:event_tfCustomerIdKeyPressed

    private void tfInvoiceNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfInvoiceNumberKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!tfInvoiceNumber.getText().equals("")) {

                try {
                    //queryyy

                    if (hasil.next()) {
                        dataditemukan = true;

                    }

                    int pilihan;
//                   pilihan = JOptionPane.showConfirmDialog(this, "")

                } catch (Exception e) {
                }
            }

            tfCustomerId.requestFocus();
        }
    }//GEN-LAST:event_tfInvoiceNumberKeyPressed

    private void tfJumlahKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfJumlahKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {
                AppDatabase.perintah.executeUpdate("insert into transaction values "
                        + "('" + tfInvoiceNumber.getText() + "', "
                        + "'2020-01-19 10:35:15', "
                        + "'" + tfProductId.getText() + "', "
                        + "'" + tfJumlah.getText() + "');");
                refreshData(5);

            } catch (SQLException e) {
                System.err.println("Query Insert Transaksi Gagal");
            }
            tfProductId.requestFocus();
            int totalHarga = 0;
            for (int i = 0; i < TableTransaction.getRowCount(); i++) {
                totalHarga = totalHarga + Integer.valueOf(transactionTable.getValueAt(i, 4).toString());
            }
            tvTotalHarga.setText("" + totalHarga);
        }
    }//GEN-LAST:event_tfJumlahKeyPressed

    private void btntransaksiBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntransaksiBatalActionPerformed

        try {
            AppDatabase.perintah.executeUpdate("delete from invoice where invoice_number ='" + tfInvoiceNumber.getText() + "';");
        } catch (SQLException e) {
        }
        transactionTable.getDataVector().removeAllElements();
        transactionTable.fireTableDataChanged();
        
         tfProductId.setEditable(true);
        tfJumlah.setEditable(true);
        
        tfInvoiceNumber.setEditable(false);
        tfCustomerId.setEditable(false);
                    
        bersihkan();
    }//GEN-LAST:event_btntransaksiBatalActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.dispose();
        Login.summonLoginPanel();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        updateStok();
        kasir();
        tfProductId.setEditable(false);
        tfJumlah.setEditable(false);
        
        tfInvoiceNumber.setEditable(true);
        tfCustomerId.setEditable(true);
        
        
        

        
        bersihkan();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tfBayarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBayarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            System.out.println(tvTotalHarga.getText() + "   " + tfBayar.getText());
            Double totalHarga = Double.parseDouble(tvTotalHarga.getText()), jumlahBayar = Double.parseDouble(tfBayar.getText());
            Double kembalian = jumlahBayar - totalHarga;
//            System.out.println("Kembalianya "+ (Integer.valueOf(tvTotalHarga.getText()) - Integer.valueOf(tfBayar.getText())));
            tfJumlah.setEditable(false);
            tvKembalian.setText("" + kembalian);
        }
    }//GEN-LAST:event_tfBayarKeyPressed

    private void tfNamaMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNamaMemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNamaMemberActionPerformed

    private void tfCustomerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCustomerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCustomerIdActionPerformed

    private void tfStockProductKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfStockProductKeyTyped
       char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE || angka == KeyEvent.VK_ENTER)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

        if (tfStockProduct.getText().length() == 4) {
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Stok Melebihi 4 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_tfStockProductKeyTyped

    private void tfHargaProductKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfHargaProductKeyTyped
          char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE || angka == KeyEvent.VK_ENTER)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

        if (tfHargaProduct.getText().length() == 10) {
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harga Melebihi 10 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_tfHargaProductKeyTyped

    private void tfBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBayarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBayarActionPerformed

    private void tfJumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfJumlahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfJumlahActionPerformed

    private void tfNoTelpMemberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNoTelpMemberKeyTyped
       
             char angka = evt.getKeyChar();
        
        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE || angka == KeyEvent.VK_ENTER)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

        if (tfNoTelpMember.getText().length() == 13) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "No Telpon Melebihi 13 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tfNoTelpMemberKeyTyped

    private void bersihkan() {

        tfUsernameProfile.setText("");
        tfPasswordProfile.setText("");
        tfNamaProfile.setText("");
        taAlamatprofile.setText("");
        tfNoTelpProfile.setText("");

        //panel Product
        tfProductidProduct.setText("");
        tfStockProduct.setText("");
        tfHargaProduct.setText("");
        tfMerekProduct.setText("");
        tfJenisProduct.setText("");
        tfNamaProduct.setText("");
        //=================================//

        //Panel Memeber
        tfMemberID.setText("");
        tfNamaMember.setText("");

        taAlamatMember.setText("");
        tfNoTelpMember.setText("");
        //=====================================//

        //Panel Member//
        tfMemberID.setText("");
        tfNamaMember.setText("");
//        jsJenisKleaminMember.set
        taAlamatMember.setText("");
        tfNoTelpMember.setText("");
        //=====================================

        //panel Transaksi
        tfInvoiceNumber.setText("");
        tfCustomerId.setText("");
        tfProductId.setText("");
        tfJumlah.setText("");
        tfBayar.setText("");
        tvNamaProduk.setText("");
        tvHarga.setText("");
        tvStok.setText("");
        tvTotalHarga.setText("");
        tvKembalian.setText("");

    }

    // Refresh Method
    private void refreshData(int mode) {

        if (mode == 1) { //Mode 1 untuk Member Table
            try {
                memberTable.getDataVector().removeAllElements();
                memberTable.fireTableDataChanged();
                hasil = AppDatabase.perintah.executeQuery("select * from customer;");
                while (hasil.next()) {
                    memberTable.addRow(new Object[]{
                        hasil.getString("customer_id"),
                        hasil.getString("name"),
                        hasil.getString("gender"),
                        hasil.getString("address"),
                        hasil.getString("telp")
                    });
                }
            } catch (SQLException e) {
                System.err.println("Query Select Customer gagal");
            }
        } else if (mode == 2) { // Mode 2 untuk Product Table
            try {
                productTable.getDataVector().removeAllElements();
                productTable.fireTableDataChanged();
                hasil = AppDatabase.perintah.executeQuery("select * from product;");
                while (hasil.next()) {
                    productTable.addRow(new Object[]{
                        hasil.getString("product_id"),
                        hasil.getString("name"),
                        hasil.getString("brand"),
                        hasil.getString("type"),
                        hasil.getString("stok"),
                        hasil.getString("price")
                    });
                }
            } catch (SQLException e) {
                System.err.println("Query Select Product gagal");
            }
        } else if (mode == 3) { //mode 3 untuk refresh data table profile
            taProfile.setText("");
            try {
                hasil = AppDatabase.perintah.executeQuery("select * from employee "
                        + "where username='" + Encapsulation.getUsername() + "';");
                hasil.next();
                taProfile.setText("Username\n\n"
                        + hasil.getString("username")
                        + "\n\nNama\n\n"
                        + hasil.getString("name")
                        + "\n\nJenis Kelamin\n\n"
                        + hasil.getString("gender")
                        + "\n\nAlamat\n\n"
                        + hasil.getString("address")
                        + "\n\nNo Telpon\n\n"
                        + hasil.getString("telp"));
            } catch (Exception e) {
                System.out.println("Query Select Profile gagal");
            }

        } else if (mode == 4) { //mode 4 untuk refresh data pada text field profile
            taProfile.setText("");
            try {
                hasil = AppDatabase.perintah.executeQuery("select * from employee "
                        + "where username='" + Encapsulation.getUsername() + "';");
                hasil.next();
                tfUsernameProfile.setText(hasil.getString("username"));
                tfPasswordProfile.setText(hasil.getString("password"));
                tfNamaProfile.setText(hasil.getString("name"));
                cbGenderProfile.setSelectedItem(hasil.getString("gender"));
                taAlamatprofile.setText(hasil.getString("address"));
                tfNoTelpProfile.setText(hasil.getString("telp"));
            } catch (Exception e) {
                System.out.println("Query Select Profile gagal");
            }

        } else if (mode == 5) { //mode 5 untuk refresh data pada table transaksi

            try {
                transactionTable.getDataVector().removeAllElements();
                transactionTable.fireTableDataChanged();
                hasil = AppDatabase.perintah.executeQuery("select product_id, name, qty, price, price*qty as total "
                        + "from transaction left join product using(product_id) "
                        + "where invoice_number ='" + tfInvoiceNumber.getText() + "';");
                while (hasil.next()) {
                    transactionTable.addRow(new Object[]{
                        hasil.getString("product_id"),
                        hasil.getString("name"),
                        hasil.getString("qty"),
                        hasil.getString("price"),
                        hasil.getString("total")
                    });

                    System.out.println(tfInvoiceNumber.getText() + "" + hasil.getString("total"));
                }
            } catch (SQLException e) {
                System.err.println("Query Select Transaction Gagal");
            }
        }
    }

    private void updateStok() {
        try {

            for (int i = 0; i < TableTransaction.getRowCount(); i++) {
                hasil = AppDatabase.perintah.executeQuery("Select stok from product where product_id ='" + transactionTable.getValueAt(i, 0).toString() + "'");
                while (hasil.next()) {
                    AppDatabase.perintah.executeUpdate("update product set stok = "
                            + "'" + ((hasil.getInt("stok")) - (Integer.valueOf(transactionTable.getValueAt(i, 2).toString())))
                            + "' where product_id ='" + transactionTable.getValueAt(i, 0).toString() + "';");
                }
                hasil = null;
            }
        } catch (SQLException e) {
            System.err.println("Query Update Product Gagal");
        }

    }

    private void enableInputPanel(int model) {

        if (model == 1) {
            //windows opened

            tfProductidProduct.setEditable(false);
            tfNamaProduct.setEditable(false);
            tfMerekProduct.setEditable(false);
            tfJenisProduct.setEditable(false);
            tfStockProduct.setEditable(false);
            tfHargaProduct.setEditable(false);

            btnBaruPrduct.setEnabled(true);
            btnSimpanProduct.setEnabled(false);
            btnUbahProduct.setEnabled(false);
            btnHapusProduct.setEnabled(false);
            btnBatalProduct.setEnabled(false);
            cbGenderProfile.setEnabled(false);
            bersihkan();

        } else if (model == 2) {
            //btn baru 
            tfProductidProduct.setEditable(true);
            tfStockProduct.setEditable(true);
            tfHargaProduct.setEditable(true);
            tfMerekProduct.setEditable(true);
            tfJenisProduct.setEditable(true);
            tfNamaProduct.setEditable(true);

            btnBaruPrduct.setEnabled(false);
            btnBatalProduct.setEnabled(false);
            btnSimpanProduct.setEnabled(true);
            btnUbahProduct.setEnabled(false);
            btnHapusProduct.setEnabled(false);

            tfProductidProduct.requestFocus();

        } else if (model == 3) {
            //btn simpan 
            btnBaruPrduct.setEnabled(true);
            btnBatalProduct.setEnabled(false);
            btnSimpanProduct.setEnabled(false);
            btnUbahProduct.setEnabled(false);
            btnHapusProduct.setEnabled(false);

            tfProductidProduct.requestFocus();

            bersihkan();

        } else if (model == 4) {
            //btn ubah 
            tfProductidProduct.setEditable(false);
            tfStockProduct.setEditable(true);
            tfHargaProduct.setEditable(true);
            tfMerekProduct.setEditable(true);
            tfJenisProduct.setEditable(true);
            tfNamaProduct.setEditable(true);

            btnBaruPrduct.setEnabled(false);
            btnBatalProduct.setEnabled(true);
            btnSimpanProduct.setEnabled(true);
            btnUbahProduct.setEnabled(false);
            btnHapusProduct.setEnabled(false);

            tfNamaProduct.requestFocus();

        } else if (model == 5) {
            //hapus
            tfProductidProduct.setEditable(false);
            tfStockProduct.setEditable(false);
            tfHargaProduct.setEditable(false);
            tfMerekProduct.setEditable(false);
            tfJenisProduct.setEditable(false);
            tfNamaProduct.setEditable(false);

            btnBaruPrduct.setEnabled(true);
            btnBatalProduct.setEnabled(true);
            btnSimpanProduct.setEnabled(false);
            btnUbahProduct.setEnabled(false);
            btnHapusProduct.setEnabled(false);

        } else if (model == 6) {
            //tabel di klik
            btnBaruPrduct.setEnabled(false);
            btnBatalProduct.setEnabled(false);
            btnSimpanProduct.setEnabled(false);
            btnUbahProduct.setEnabled(true);
            btnHapusProduct.setEnabled(true);

            tfProductidProduct.setEditable(false);
            tfNamaProduct.setEditable(false);
            tfMerekProduct.setEditable(false);
            tfJenisProduct.setEditable(false);
            tfStockProduct.setEditable(false);
            tfHargaProduct.setEditable(false);
        }

    }

    private void enableProfile(int mode) {

        if (mode == 1) {
            //btn ubah  
            btnSimpanProfile.setEnabled(true);
            btnUbahProfile.setEnabled(false);
            btnBatalProfile.setEnabled(true);

            tfUsernameProfile.setEditable(false);
            tfPasswordProfile.setEditable(true);
            tfNamaProfile.setEditable(true);
            cbGenderProfile.setEnabled(true);
            taAlamatprofile.setEditable(true);
            tfNoTelpProfile.setEditable(true);

            tfPasswordProfile.requestFocus();

            refreshData(4);

        } else if (mode == 2) {
            //windows opened
            tfUsernameProfile.setEditable(false);
            tfPasswordProfile.setEditable(false);
            tfNamaProfile.setEditable(false);

            cbGenderProfile.setEditable(false);
            taAlamatprofile.setEditable(false);
            tfNoTelpProfile.setEditable(false);

            btnBatalProfile.setEnabled(false);
            btnSimpanProfile.setEnabled(false);
            btnUbahProfile.setEnabled(true);

        } else if (mode == 3) {
            //btn simpan 

            bersihkan();
            btnSimpanProfile.setEnabled(false);
            btnUbahProfile.setEnabled(true);
            btnBatalProfile.setEnabled(false);

            tfUsernameProfile.setEditable(false);
            tfPasswordProfile.setEditable(true);
            tfNamaProfile.setEditable(true);
            cbGenderProfile.setEnabled(true);
            taAlamatprofile.setEditable(true);
            tfNoTelpProfile.setEditable(true);

            refreshData(3);

        } else if (mode == 4) {
            btnSimpanProfile.setEnabled(false);
            btnUbahProfile.setEnabled(true);
            btnBatalProfile.setEnabled(false);

            tfUsernameProfile.setEditable(false);
            tfPasswordProfile.setEditable(false);
            tfNamaProfile.setEditable(false);
            cbGenderProfile.setEditable(false);
            taAlamatprofile.setEditable(false);
            tfNoTelpProfile.setEditable(false);

            btnUbahProfile.requestFocus();
            bersihkan();
        }

    }

    private void enableMember(int model) {
        //ketika aplikasi muncul 
        if (model == 1) {

            btnBaruMemeber.setEnabled(true);
            btnSimpanMember.setEnabled(false);
            btnBatalMember.setEnabled(false);
            btnHapusMember.setEnabled(false);
            btnUbahMember.setEnabled(false);

            tfMemberID.setEditable(false);
            tfNamaMember.setEditable(false);
            cbKelaminMember.setEnabled(false);
            taAlamatMember.setEditable(false);
            tfNoTelpMember.setEditable(false);

            btnBaruMemeber.requestFocus();
            bersihkan();

        } else if (model == 2) {
            //btn Baru 
            btnBaruMemeber.setEnabled(false);
            btnSimpanMember.setEnabled(true);
            btnBatalMember.setEnabled(true);
            btnHapusMember.setEnabled(false);
            btnUbahMember.setEnabled(false);

            tfMemberID.setEditable(true);
            tfNamaMember.setEditable(true);
            cbKelaminMember.setEnabled(true);
            taAlamatMember.setEditable(true);
            tfNoTelpMember.setEditable(true);

            tfMemberID.requestFocus();

        } else if (model == 3) {
            //btn Simpan

            tfMemberID.setEditable(false);
            tfNamaMember.setEditable(false);
            cbKelaminMember.setEditable(false);
            taAlamatMember.setEditable(false);
            tfNoTelpMember.setEditable(false);

            btnBaruMemeber.setEnabled(true);
            btnSimpanMember.setEnabled(false);
            btnBatalMember.setEnabled(false);
            btnHapusMember.setEnabled(false);
            btnUbahMember.setEnabled(false);
            bersihkan();
         

        } else if (model == 4) {
            //btn Ubah
            btnBaruMemeber.setEnabled(false);
            btnSimpanMember.setEnabled(true);
            btnUbahMember.setEnabled(true);
            btnHapusMember.setEnabled(false);
            btnBatalMember.setEnabled(true);

            tfMemberID.setEditable(false);
            tfNamaMember.setEditable(true);
            cbKelaminMember.setEditable(true);
            taAlamatMember.setEditable(true);
            tfNoTelpMember.setEditable(true);
            tfNamaMember.requestFocus();

        } else if (model == 5) {
            //btn Hapus
            btnBaruMemeber.setEnabled(true);
            btnBatalMember.setEnabled(false);
            btnSimpanMember.setEnabled(false);
            btnHapusMember.setEnabled(false);
            btnUbahMember.setEnabled(false);

            tfMemberID.setEditable(false);
            tfNamaMember.setEditable(false);
            cbKelaminMember.setEditable(false);
            taAlamatMember.setEditable(false);
            tfNoTelpMember.setEditable(false);

            bersihkan();

        } else if (model == 6) {
            //tabel di klik 
            btnBaruMemeber.setEnabled(false);
            btnSimpanMember.setEnabled(false);
            btnUbahMember.setEnabled(true);
            btnHapusMember.setEnabled(true);
            btnBatalMember.setEnabled(true);

            tfMemberID.setEditable(false);
            tfNamaMember.setEditable(true);
            cbKelaminMember.setEditable(true);
            taAlamatMember.setEditable(true);
            tfNoTelpMember.setEditable(true);

        }

    }

    public static void summonCashierPanel() {
        CashierPanel cashier = new CashierPanel();
        cashier.setSize(1150, 695);
        cashier.setLocationRelativeTo(null);
        cashier.setVisible(true);

    }

    private void Date() {

        new Thread() {

            public void run() {

                while (true) {
                    Calendar kalender = new GregorianCalendar();
                    int tahun = kalender.get(Calendar.YEAR);
                    int bulan = kalender.get(Calendar.MONTH) + 1;
                    int hari = kalender.get(Calendar.DAY_OF_MONTH);
                    int jam = kalender.get(Calendar.HOUR_OF_DAY);
                    int menit = kalender.get(Calendar.MINUTE);
                    int detik = kalender.get(Calendar.SECOND);

                    String date = hari + "-" + bulan + "-" + tahun + " " + jam + ":" + menit + ":" + detik;

                    tvData.setText(date);

                }

            }

        }.start();

    }

    private void kasir() {

        transactionTable.getDataVector().removeAllElements();
        transactionTable.fireTableDataChanged();

        tfInvoiceNumber.setEditable(true);
        tfCustomerId.setEditable(true);
        tfJumlah.setEditable(false);
        tfInvoiceNumber.requestFocus();
    }

//    private void recolor(){
//        jlProfile.setForeground(Color.BLACK);
//        jlInput.setForeground(Color.BLACK);
//        jlMember.setForeground(Color.BLACK);
//        jlTransaksi.setForeground(Color.BLACK);
//          
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashierPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashierPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashierPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                summonCashierPanel();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InputPanel;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JPanel ProfilePanel;
    private javax.swing.JTable TableMember;
    private javax.swing.JTable TableProduct;
    private javax.swing.JTable TableTransaction;
    private javax.swing.JButton btnBaruMemeber;
    private javax.swing.JButton btnBaruPrduct;
    private javax.swing.JButton btnBatalMember;
    private javax.swing.JButton btnBatalProduct;
    private javax.swing.JButton btnBatalProfile;
    private javax.swing.JButton btnHapusMember;
    private javax.swing.JButton btnHapusProduct;
    private javax.swing.JButton btnSimpanMember;
    private javax.swing.JButton btnSimpanProduct;
    private javax.swing.JButton btnSimpanProfile;
    private javax.swing.JButton btnUbahMember;
    private javax.swing.JButton btnUbahProduct;
    private javax.swing.JButton btnUbahProfile;
    private javax.swing.JButton btntransaksiBatal;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbGenderProfile;
    private javax.swing.JComboBox<String> cbKelaminMember;
    private javax.swing.JLabel imgProduct;
    private javax.swing.JLabel imgTransaction;
    private javax.swing.JLabel imgWelcome;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel memberRegisterPanel;
    private javax.swing.JTextArea taAlamatMember;
    private javax.swing.JTextArea taAlamatprofile;
    private javax.swing.JTextArea taProfile;
    private javax.swing.JTextField tfBayar;
    private javax.swing.JTextField tfCustomerId;
    private javax.swing.JTextField tfHargaProduct;
    private javax.swing.JTextField tfInvoiceNumber;
    private javax.swing.JTextField tfJenisProduct;
    private javax.swing.JTextField tfJumlah;
    private javax.swing.JTextField tfMemberID;
    private javax.swing.JTextField tfMerekProduct;
    private javax.swing.JTextField tfNamaMember;
    private javax.swing.JTextField tfNamaProduct;
    private javax.swing.JTextField tfNamaProfile;
    private javax.swing.JTextField tfNoTelpMember;
    private javax.swing.JTextField tfNoTelpProfile;
    private javax.swing.JPasswordField tfPasswordProfile;
    private javax.swing.JTextField tfProductId;
    private javax.swing.JTextField tfProductidProduct;
    private javax.swing.JTextField tfStockProduct;
    private javax.swing.JTextField tfUsernameProfile;
    private javax.swing.JPanel transaksiPanel;
    private javax.swing.JLabel tvAbout;
    private javax.swing.JLabel tvData;
    private javax.swing.JLabel tvHarga;
    private javax.swing.JLabel tvKembalian;
    private javax.swing.JLabel tvMember;
    private javax.swing.JLabel tvNamaProduk;
    private javax.swing.JLabel tvProduct;
    private javax.swing.JLabel tvStok;
    private javax.swing.JLabel tvTotalHarga;
    private javax.swing.JLabel tvTransaction;
    private javax.swing.JLabel tvUser;
    private javax.swing.JLabel tvWelcome;
    private javax.swing.JPanel welcomePanel;
    // End of variables declaration//GEN-END:variables
}
