/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author muham
 */
public class AdminPanel extends javax.swing.JFrame {

    private Color klik, utama;
    private ResultSet hasil;
    private Boolean saveMode;
    private DefaultTableModel memberTable, cashierTable, dataTransactionTable, dataProductTable;

    public AdminPanel() {
        initComponents();

        klik = Color.BLUE;
        utama = new Color(250, 128, 114);
        desainTabel();

        // koneksi table
        memberTable = (DefaultTableModel) MemberTable.getModel();
        cashierTable = (DefaultTableModel) CashierTable.getModel();
        dataProductTable = (DefaultTableModel) DataProductTable.getModel();
        dataTransactionTable = (DefaultTableModel) DataTransactionTable.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuPanel = new javax.swing.JPanel();
        tvData = new javax.swing.JLabel();
        imgLogo = new javax.swing.JLabel();
        tvCashier = new javax.swing.JLabel();
        tvMember = new javax.swing.JLabel();
        tvUser = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        WelcomePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        imgWelcome = new javax.swing.JLabel();
        DataPanel = new javax.swing.JPanel();
        tvDataProduct = new javax.swing.JLabel();
        tvDataTransaction = new javax.swing.JLabel();
        MainPanelAdmin = new javax.swing.JPanel();
        ProductTablePanel = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        DataProductTable = new javax.swing.JTable();
        TransactionTablePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DataTransactionTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        CashierPanel = new javax.swing.JPanel();
        tfUsernameKasir = new javax.swing.JTextField();
        tfNamaKasir = new javax.swing.JTextField();
        tfNoTelpKasir = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        taAlamatKasir = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        CashierTable = new javax.swing.JTable();
        btnBaruKasir = new javax.swing.JButton();
        btnSimpanKasir = new javax.swing.JButton();
        btnUbahKasir = new javax.swing.JButton();
        btnHapusKasir = new javax.swing.JButton();
        btnBatalKasir = new javax.swing.JButton();
        cbGenderKaisr = new javax.swing.JComboBox<>();
        tfPasswordKasir = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        MemberPanel = new javax.swing.JPanel();
        tfNoTelpMember = new javax.swing.JTextField();
        tfMemberID = new javax.swing.JTextField();
        tfNamaMember = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        taAlamatMember = new javax.swing.JTextArea();
        cbJenisKleaminMember = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        MemberTable = new javax.swing.JTable();
        btnBaruMember = new javax.swing.JButton();
        btnSimpanMember = new javax.swing.JButton();
        btnUbahMember = new javax.swing.JButton();
        btnHapusMember = new javax.swing.JButton();
        btnBatalMember = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        ProfilePanel = new javax.swing.JPanel();
        btnSimpanProfile = new javax.swing.JButton();
        btnUbahProfile = new javax.swing.JButton();
        btnBatalProfile = new javax.swing.JButton();
        tfUsernameProfile = new javax.swing.JTextField();
        tfNamaProfile = new javax.swing.JTextField();
        cbGenderProfile = new javax.swing.JComboBox<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        taAlamatProfile = new javax.swing.JTextArea();
        tfNoTelpProfile = new javax.swing.JTextField();
        tfPasswordProfile = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        taProfile = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MenuPanel.setBackground(new java.awt.Color(255, 255, 255));
        MenuPanel.setForeground(new java.awt.Color(255, 255, 255));
        MenuPanel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        tvData.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tvData.setForeground(new java.awt.Color(250, 128, 114));
        tvData.setText("Data");
        tvData.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tvData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvDataMouseClicked(evt);
            }
        });

        imgLogo.setForeground(new java.awt.Color(250, 128, 114));
        imgLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/logo.png"))); // NOI18N
        imgLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        imgLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imgLogoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imgLogoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imgLogoMouseExited(evt);
            }
        });

        tvCashier.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tvCashier.setForeground(new java.awt.Color(250, 128, 114));
        tvCashier.setText("Cashier");
        tvCashier.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tvCashier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvCashierMouseClicked(evt);
            }
        });

        tvMember.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tvMember.setForeground(new java.awt.Color(250, 128, 114));
        tvMember.setText("Member");
        tvMember.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tvMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvMemberMouseClicked(evt);
            }
        });

        tvUser.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tvUser.setForeground(new java.awt.Color(250, 128, 114));
        tvUser.setText("Hi, User");
        tvUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tvUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvUserMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(250, 128, 114));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Logout");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout MenuPanelLayout = new javax.swing.GroupLayout(MenuPanel);
        MenuPanel.setLayout(MenuPanelLayout);
        MenuPanelLayout.setHorizontalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgLogo)
                .addGap(341, 341, 341)
                .addComponent(tvData)
                .addGap(68, 68, 68)
                .addComponent(tvCashier)
                .addGap(51, 51, 51)
                .addComponent(tvMember)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 246, Short.MAX_VALUE)
                .addComponent(tvUser, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        MenuPanelLayout.setVerticalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuPanelLayout.createSequentialGroup()
                .addGap(0, 5, Short.MAX_VALUE)
                .addComponent(imgLogo))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuPanelLayout.createSequentialGroup()
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tvData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tvCashier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tvMember, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MenuPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tvUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(MenuPanelLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(1, 1, 1)))))
                .addContainerGap())
        );

        getContentPane().add(MenuPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1160, 60));

        MainPanel.setBackground(new java.awt.Color(102, 102, 0));
        MainPanel.setLayout(new java.awt.CardLayout());

        WelcomePanel.setBackground(new java.awt.Color(153, 153, 255));
        WelcomePanel.setLayout(null);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("jLabel2");
        WelcomePanel.add(jLabel2);
        jLabel2.setBounds(40, 300, 150, 30);

        imgWelcome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/WelcomeAdmin.png"))); // NOI18N
        imgWelcome.setText("jLabel1");
        WelcomePanel.add(imgWelcome);
        imgWelcome.setBounds(0, 0, 1150, 650);

        MainPanel.add(WelcomePanel, "card2");

        DataPanel.setBackground(new java.awt.Color(0, 102, 153));
        DataPanel.setLayout(null);

        tvDataProduct.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tvDataProduct.setText("Data Product");
        tvDataProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvDataProductMouseClicked(evt);
            }
        });
        DataPanel.add(tvDataProduct);
        tvDataProduct.setBounds(870, 50, 90, 17);

        tvDataTransaction.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tvDataTransaction.setText("Data Transaksi");
        tvDataTransaction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvDataTransactionMouseClicked(evt);
            }
        });
        DataPanel.add(tvDataTransaction);
        tvDataTransaction.setBounds(200, 50, 120, 17);

        MainPanelAdmin.setLayout(new java.awt.CardLayout());

        ProductTablePanel.setBackground(new java.awt.Color(255, 51, 0));
        ProductTablePanel.setOpaque(false);

        DataProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product_id", "Nama Produk", "Merek", "Jenis", "Persediaan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        DataProductTable.setFocusable(false);
        DataProductTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        DataProductTable.setShowVerticalLines(false);
        DataProductTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane9.setViewportView(DataProductTable);

        javax.swing.GroupLayout ProductTablePanelLayout = new javax.swing.GroupLayout(ProductTablePanel);
        ProductTablePanel.setLayout(ProductTablePanelLayout);
        ProductTablePanelLayout.setHorizontalGroup(
            ProductTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 1040, Short.MAX_VALUE)
        );
        ProductTablePanelLayout.setVerticalGroup(
            ProductTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductTablePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        MainPanelAdmin.add(ProductTablePanel, "card2");

        TransactionTablePanel.setBackground(new java.awt.Color(204, 204, 0));
        TransactionTablePanel.setOpaque(false);

        DataTransactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice Number", "Cashier", "Member", "Date", "Product", "Jumlah", "Pembayaran"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        DataTransactionTable.setFocusable(false);
        DataTransactionTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        DataTransactionTable.setShowVerticalLines(false);
        DataTransactionTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(DataTransactionTable);

        javax.swing.GroupLayout TransactionTablePanelLayout = new javax.swing.GroupLayout(TransactionTablePanel);
        TransactionTablePanel.setLayout(TransactionTablePanelLayout);
        TransactionTablePanelLayout.setHorizontalGroup(
            TransactionTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1040, Short.MAX_VALUE)
        );
        TransactionTablePanelLayout.setVerticalGroup(
            TransactionTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransactionTablePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        MainPanelAdmin.add(TransactionTablePanel, "card3");

        DataPanel.add(MainPanelAdmin);
        MainPanelAdmin.setBounds(50, 120, 1040, 390);
        DataPanel.add(jLabel6);
        jLabel6.setBounds(340, 540, 150, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/BlankPanel.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        DataPanel.add(jLabel1);
        jLabel1.setBounds(0, 0, 1150, 640);

        MainPanel.add(DataPanel, "card3");

        CashierPanel.setBackground(new java.awt.Color(51, 102, 255));
        CashierPanel.setLayout(null);

        tfUsernameKasir.setBorder(null);
        tfUsernameKasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUsernameKasirActionPerformed(evt);
            }
        });
        CashierPanel.add(tfUsernameKasir);
        tfUsernameKasir.setBounds(300, 100, 240, 30);

        tfNamaKasir.setBorder(null);
        tfNamaKasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNamaKasirActionPerformed(evt);
            }
        });
        CashierPanel.add(tfNamaKasir);
        tfNamaKasir.setBounds(300, 220, 230, 30);

        tfNoTelpKasir.setBorder(null);
        tfNoTelpKasir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNoTelpKasirKeyTyped(evt);
            }
        });
        CashierPanel.add(tfNoTelpKasir);
        tfNoTelpKasir.setBounds(310, 500, 220, 30);

        taAlamatKasir.setColumns(20);
        taAlamatKasir.setRows(5);
        taAlamatKasir.setBorder(null);
        taAlamatKasir.setCaretColor(new java.awt.Color(153, 153, 153));
        taAlamatKasir.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        taAlamatKasir.setOpaque(false);
        taAlamatKasir.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        taAlamatKasir.setSelectionColor(new java.awt.Color(0, 0, 0));
        jScrollPane3.setViewportView(taAlamatKasir);

        CashierPanel.add(jScrollPane3);
        jScrollPane3.setBounds(310, 336, 200, 140);

        CashierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Nama", "Jens Kelamin", "Alamat", "No Telpon"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CashierTable.setFocusable(false);
        CashierTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        CashierTable.setShowVerticalLines(false);
        CashierTable.getTableHeader().setReorderingAllowed(false);
        CashierTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CashierTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(CashierTable);

        CashierPanel.add(jScrollPane7);
        jScrollPane7.setBounds(580, 90, 530, 370);

        btnBaruKasir.setText("Baru");
        btnBaruKasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaruKasirActionPerformed(evt);
            }
        });
        CashierPanel.add(btnBaruKasir);
        btnBaruKasir.setBounds(590, 480, 90, 40);

        btnSimpanKasir.setText("Simpan");
        btnSimpanKasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanKasirActionPerformed(evt);
            }
        });
        CashierPanel.add(btnSimpanKasir);
        btnSimpanKasir.setBounds(700, 480, 90, 40);

        btnUbahKasir.setText("Ubah");
        btnUbahKasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahKasirActionPerformed(evt);
            }
        });
        CashierPanel.add(btnUbahKasir);
        btnUbahKasir.setBounds(810, 480, 80, 40);

        btnHapusKasir.setText("Hapus");
        btnHapusKasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusKasirActionPerformed(evt);
            }
        });
        CashierPanel.add(btnHapusKasir);
        btnHapusKasir.setBounds(920, 480, 80, 40);

        btnBatalKasir.setText("Batal");
        btnBatalKasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalKasirActionPerformed(evt);
            }
        });
        CashierPanel.add(btnBatalKasir);
        btnBatalKasir.setBounds(1030, 480, 80, 40);

        cbGenderKaisr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jenis Kelamin", "Laki-Laki", "Perempuan", " " }));
        cbGenderKaisr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGenderKaisrActionPerformed(evt);
            }
        });
        CashierPanel.add(cbGenderKaisr);
        cbGenderKaisr.setBounds(300, 280, 210, 30);

        tfPasswordKasir.setBorder(null);
        CashierPanel.add(tfPasswordKasir);
        tfPasswordKasir.setBounds(300, 160, 240, 30);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Profile.png"))); // NOI18N
        CashierPanel.add(jLabel5);
        jLabel5.setBounds(0, 0, 1155, 651);

        MainPanel.add(CashierPanel, "card4");

        MemberPanel.setBackground(new java.awt.Color(51, 51, 51));
        MemberPanel.setLayout(null);

        tfNoTelpMember.setBorder(null);
        tfNoTelpMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNoTelpMemberActionPerformed(evt);
            }
        });
        tfNoTelpMember.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNoTelpMemberKeyTyped(evt);
            }
        });
        MemberPanel.add(tfNoTelpMember);
        tfNoTelpMember.setBounds(290, 460, 220, 30);

        tfMemberID.setBorder(null);
        tfMemberID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMemberIDActionPerformed(evt);
            }
        });
        tfMemberID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfMemberIDKeyTyped(evt);
            }
        });
        MemberPanel.add(tfMemberID);
        tfMemberID.setBounds(290, 110, 220, 40);

        tfNamaMember.setBorder(null);
        tfNamaMember.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNamaMemberKeyTyped(evt);
            }
        });
        MemberPanel.add(tfNamaMember);
        tfNamaMember.setBounds(290, 170, 220, 30);

        taAlamatMember.setColumns(20);
        taAlamatMember.setRows(5);
        jScrollPane4.setViewportView(taAlamatMember);

        MemberPanel.add(jScrollPane4);
        jScrollPane4.setBounds(290, 286, 210, 140);

        cbJenisKleaminMember.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jenis Kelamin", "Laki-Laki", "Perempuan" }));
        MemberPanel.add(cbJenisKleaminMember);
        cbJenisKleaminMember.setBounds(290, 230, 220, 30);

        MemberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Number ID", "Nama", "Jenis Kelamin", "Alamat", "No Telpon"
            }
        ));
        MemberTable.setFocusable(false);
        MemberTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        MemberTable.setShowVerticalLines(false);
        MemberTable.getTableHeader().setReorderingAllowed(false);
        MemberTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MemberTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(MemberTable);

        MemberPanel.add(jScrollPane5);
        jScrollPane5.setBounds(600, 100, 510, 340);

        btnBaruMember.setText("Baru");
        btnBaruMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaruMemberActionPerformed(evt);
            }
        });
        MemberPanel.add(btnBaruMember);
        btnBaruMember.setBounds(590, 460, 90, 40);

        btnSimpanMember.setText("Simpan");
        btnSimpanMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanMemberActionPerformed(evt);
            }
        });
        MemberPanel.add(btnSimpanMember);
        btnSimpanMember.setBounds(700, 460, 90, 40);

        btnUbahMember.setText("Ubah");
        btnUbahMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahMemberActionPerformed(evt);
            }
        });
        MemberPanel.add(btnUbahMember);
        btnUbahMember.setBounds(810, 460, 90, 40);

        btnHapusMember.setText("Hapus");
        btnHapusMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusMemberActionPerformed(evt);
            }
        });
        MemberPanel.add(btnHapusMember);
        btnHapusMember.setBounds(920, 460, 80, 40);

        btnBatalMember.setText("Batal");
        btnBatalMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalMemberActionPerformed(evt);
            }
        });
        MemberPanel.add(btnBatalMember);
        btnBatalMember.setBounds(1020, 460, 90, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/MemberPanel.png"))); // NOI18N
        MemberPanel.add(jLabel4);
        jLabel4.setBounds(0, 0, 1155, 651);

        MainPanel.add(MemberPanel, "card5");

        ProfilePanel.setLayout(null);

        btnSimpanProfile.setText("Simpan");
        btnSimpanProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanProfileActionPerformed(evt);
            }
        });
        ProfilePanel.add(btnSimpanProfile);
        btnSimpanProfile.setBounds(720, 470, 90, 40);

        btnUbahProfile.setText("Ubah");
        btnUbahProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahProfileActionPerformed(evt);
            }
        });
        ProfilePanel.add(btnUbahProfile);
        btnUbahProfile.setBounds(610, 470, 90, 40);

        btnBatalProfile.setText("Batal");
        btnBatalProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalProfileActionPerformed(evt);
            }
        });
        ProfilePanel.add(btnBatalProfile);
        btnBatalProfile.setBounds(830, 470, 80, 40);

        tfUsernameProfile.setBorder(null);
        ProfilePanel.add(tfUsernameProfile);
        tfUsernameProfile.setBounds(300, 100, 230, 30);

        tfNamaProfile.setBorder(null);
        ProfilePanel.add(tfNamaProfile);
        tfNamaProfile.setBounds(300, 220, 230, 30);

        cbGenderProfile.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jenis Kelamin", "Laki-Laki", "Perempuan" }));
        ProfilePanel.add(cbGenderProfile);
        cbGenderProfile.setBounds(300, 280, 230, 30);

        taAlamatProfile.setColumns(20);
        taAlamatProfile.setRows(5);
        taAlamatProfile.setBorder(null);
        jScrollPane8.setViewportView(taAlamatProfile);

        ProfilePanel.add(jScrollPane8);
        jScrollPane8.setBounds(300, 330, 210, 150);

        tfNoTelpProfile.setBorder(null);
        tfNoTelpProfile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNoTelpProfileKeyTyped(evt);
            }
        });
        ProfilePanel.add(tfNoTelpProfile);
        tfNoTelpProfile.setBounds(300, 500, 230, 30);

        tfPasswordProfile.setBorder(null);
        ProfilePanel.add(tfPasswordProfile);
        tfPasswordProfile.setBounds(300, 160, 230, 30);

        taProfile.setColumns(20);
        taProfile.setRows(5);
        jScrollPane1.setViewportView(taProfile);

        ProfilePanel.add(jScrollPane1);
        jScrollPane1.setBounds(610, 90, 490, 350);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Profile.png"))); // NOI18N
        ProfilePanel.add(jLabel3);
        jLabel3.setBounds(0, 0, 1150, 650);

        MainPanel.add(ProfilePanel, "card6");

        getContentPane().add(MainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1150, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        dispose();
        Login.summonLoginPanel();
    }//GEN-LAST:event_formWindowClosing

    private void desainTabel() {
        DataProductTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        DataProductTable.getTableHeader().setOpaque(false);
        DataProductTable.setBackground(Color.WHITE);
        DataProductTable.getTableHeader().setForeground(Color.PINK);
        DataProductTable.setRowHeight(25);

        DataTransactionTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        DataTransactionTable.getTableHeader().setOpaque(false);
        DataTransactionTable.setBackground(Color.WHITE);
        DataTransactionTable.getTableHeader().setForeground(Color.PINK);
        DataTransactionTable.setRowHeight(25);

        CashierTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        CashierTable.getTableHeader().setOpaque(false);
        CashierTable.setBackground(Color.WHITE);            
        CashierTable.getTableHeader().setForeground(Color.PINK);
        CashierTable.setRowHeight(25);

        MemberTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        MemberTable.getTableHeader().setOpaque(false);
        MemberTable.setBackground(Color.WHITE);
        MemberTable.getTableHeader().setForeground(Color.PINK);
        MemberTable.setRowHeight(25);

    }


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//        jLabel1.setText("Hi, " + Encapsulation.getName());
        MainPanelAdmin.removeAll();
        MainPanelAdmin.repaint();
        MainPanelAdmin.revalidate();

        MainPanelAdmin.add(TransactionTablePanel);
        MainPanelAdmin.repaint();
        MainPanelAdmin.revalidate();

        tvDataTransaction.setForeground(utama);
        tvDataProduct.setForeground(klik);

        Date();

        EnableMember(1);
        EnableKasir(1);
        EnableProfile(1);
    }//GEN-LAST:event_formWindowOpened

    private void tvUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvUserMouseClicked
        MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();

        MainPanel.add(ProfilePanel);
        MainPanel.repaint();
        MainPanel.revalidate();

        imgLogo.setForeground(utama);
        tvData.setForeground(utama);

        tvCashier.setForeground(utama);
        tvMember.setForeground(utama);
        tvUser.setForeground(klik);

        refreshData(5);
    }//GEN-LAST:event_tvUserMouseClicked

    private void tvMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvMemberMouseClicked
        MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();

        MainPanel.add(MemberPanel);
        MainPanel.repaint();
        MainPanel.revalidate();

        tvMember.setForeground(klik);
        imgLogo.setForeground(utama);
        tvData.setForeground(utama);
        tvCashier.setForeground(utama);
        tvUser.setForeground(utama);

        refreshData(4);

    }//GEN-LAST:event_tvMemberMouseClicked

    private void tvCashierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvCashierMouseClicked
        MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();

        MainPanel.add(CashierPanel);
        MainPanel.repaint();
        MainPanel.revalidate();

        imgLogo.setForeground(utama);
        tvData.setForeground(utama);

        tvCashier.setForeground(klik);
        tvMember.setForeground(utama);
        tvUser.setForeground(utama);

        refreshData(3);
    }//GEN-LAST:event_tvCashierMouseClicked

    private void imgLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgLogoMouseClicked
        AboutPanel.summonAboutPanel();
    }//GEN-LAST:event_imgLogoMouseClicked

    private void tvDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvDataMouseClicked
        MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();

        MainPanel.add(DataPanel);
        MainPanel.repaint();
        MainPanel.revalidate();

        tvData.setForeground(klik);
        imgLogo.setForeground(utama);
        tvCashier.setForeground(utama);
        tvMember.setForeground(utama);
        tvUser.setForeground(utama);

    }//GEN-LAST:event_tvDataMouseClicked

    private void imgLogoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgLogoMouseEntered
        imgLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/logoGlow.png")));
    }//GEN-LAST:event_imgLogoMouseEntered

    private void imgLogoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgLogoMouseExited
        imgLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/logo.png")));
    }//GEN-LAST:event_imgLogoMouseExited

    private void tvDataTransactionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvDataTransactionMouseClicked
        MainPanelAdmin.removeAll();
        MainPanelAdmin.repaint();
        MainPanelAdmin.revalidate();

        MainPanelAdmin.add(TransactionTablePanel);
        MainPanelAdmin.repaint();
        MainPanelAdmin.revalidate();

        tvDataTransaction.setForeground(utama);
        tvDataProduct.setForeground(klik);

        refreshData(1);

    }//GEN-LAST:event_tvDataTransactionMouseClicked

    private void tvDataProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvDataProductMouseClicked
        MainPanelAdmin.removeAll();
        MainPanelAdmin.repaint();
        MainPanelAdmin.revalidate();

        MainPanelAdmin.add(ProductTablePanel);
        MainPanelAdmin.repaint();
        MainPanelAdmin.revalidate();

        tvDataTransaction.setForeground(klik);
        tvDataProduct.setForeground(utama);

        refreshData(2);
    }//GEN-LAST:event_tvDataProductMouseClicked

    private void tfMemberIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMemberIDKeyTyped
        if (tfMemberID.getText().length() == 5) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Member Id Melebihi 5 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);

        }

        char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tfMemberIDKeyTyped

    private void tfNamaMemberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNamaMemberKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNamaMemberKeyTyped

    private void tfMemberIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMemberIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMemberIDActionPerformed

    private void tfNoTelpMemberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNoTelpMemberKeyTyped
        if (tfNoTelpMember.getText().length() == 13) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Product Id Melebihi 13 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);

        }

        char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE || angka == KeyEvent.VK_ENTER)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tfNoTelpMemberKeyTyped

    private void btnBaruMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaruMemberActionPerformed
        saveMode = true;
        EnableMember(2);
    }//GEN-LAST:event_btnBaruMemberActionPerformed

    private void btnSimpanMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanMemberActionPerformed
        if (tfMemberID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Member Id Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfMemberID.requestFocus();

        } else if (tfNamaMember.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Nama Member Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfNamaMember.requestFocus();

        } else if (cbJenisKleaminMember.getSelectedItem().equals("Pilih Jenis Kelamin")) {
            JOptionPane.showMessageDialog(this, " Nama Member Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            cbJenisKleaminMember.requestFocus();

        } else if (taAlamatMember.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Alamat Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfNamaMember.requestFocus();

        } else if (tfNoTelpMember.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " No Telpon Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfNoTelpMember.requestFocus();
        }

        //Query Simpan
        try {
            if (saveMode == true) {
                AppDatabase.perintah.executeUpdate("insert into customer values "
                        + "('" + tfMemberID.getText() + "',"
                        + "'" + tfNamaMember.getText() + "',"
                        + "'" + cbJenisKleaminMember.getSelectedItem() + " ',"
                        + "'" + taAlamatMember.getText() + " ',"
                        + "'" + tfNoTelpMember.getText() + "')");
            } else {
                AppDatabase.perintah.executeUpdate("update customer set "
                        + "name = '" + tfNamaMember.getText() + "',"
                        + "gender = '" + cbJenisKleaminMember.getSelectedItem() + "',"
                        + "address = '" + taAlamatMember.getText() + "' ,"
                        + "telp = '" + tfNoTelpMember.getText() + "' "
                        + "where customer_id = '" + tfMemberID.getText() + "';");
                System.out.println("Query update berhasil");
            }
        } catch (SQLException e) {
        }

        btnSimpanMember.requestFocus();
        refreshData(4);
        EnableMember(1);
        bersihkan();

    }//GEN-LAST:event_btnSimpanMemberActionPerformed

    private void MemberTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MemberTableMouseClicked
        EnableMember(4);
    }//GEN-LAST:event_MemberTableMouseClicked

    private void btnUbahMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahMemberActionPerformed
        saveMode = false;
        EnableMember(5);
    }//GEN-LAST:event_btnUbahMemberActionPerformed

    private void btnHapusMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusMemberActionPerformed
        int konfirmasi = JOptionPane.showConfirmDialog(this,
                "Apakah Anda Yakin?\n Dengan Menghapus Member akan Menghilangkan\n Seluruh Data Transaksi yang ada",
                "Konfirmasi",
                JOptionPane.YES_NO_OPTION);
        if (konfirmasi == 0) {

            try {
                AppDatabase.perintah.execute("delete from customer "
                        + "where customer_id ='" + tfMemberID.getText() + "';");
                refreshData(1);
            } catch (SQLException e) {
                System.err.println("Query delete Member gagal");
            }
            EnableMember(6);
            refreshData(4);
        }
    }//GEN-LAST:event_btnHapusMemberActionPerformed

    private void btnBatalMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalMemberActionPerformed
        EnableMember(7);
    }//GEN-LAST:event_btnBatalMemberActionPerformed

    private void tfNamaKasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNamaKasirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNamaKasirActionPerformed

    private void btnBaruKasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaruKasirActionPerformed
        EnableKasir(2);
        saveMode = true;
    }//GEN-LAST:event_btnBaruKasirActionPerformed

    private void btnSimpanKasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanKasirActionPerformed
        if (tfUsernameKasir.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Username Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfUsernameKasir.requestFocus();

        } else if (tfPasswordKasir.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Password Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfPasswordKasir.requestFocus();

        } else if (tfNamaKasir.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Nama Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfNamaKasir.requestFocus();

        } else if (cbGenderKaisr.getSelectedItem().equals("Pilih Jenis Kelamin")) {
            JOptionPane.showMessageDialog(this, " Jenis Kelamin Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            cbGenderKaisr.requestFocus();

        } else if (taAlamatKasir.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Jenis Kelamin Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            taAlamatKasir.requestFocus();

        } else if (tfNoTelpKasir.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " No Telpon Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfNoTelpMember.requestFocus();
        } else {

        }

        // Query Simpan Kasir
        try {
            if (saveMode == true) {
                AppDatabase.perintah.executeUpdate("insert into employee values "
                        + "('" + tfUsernameKasir.getText() + "',"
                        + "'" + String.valueOf(tfPasswordKasir.getPassword()) + "',"
                        + "'cashier', "
                        + "'" + tfNamaKasir.getText() + "',"
                        + "'" + cbGenderKaisr.getSelectedItem() + "',"
                        + "'" + taAlamatKasir.getText() + "', "
                        + "'" + tfNoTelpKasir.getText() + "');");
                System.out.println("Query insert cashier berhasil");
            } else {
                AppDatabase.perintah.executeUpdate("update employee set "
                        + "password = '" + String.valueOf(tfPasswordKasir.getPassword()) + "',"
                        + "level ='cashier' ,"
                        + "name = '" + tfNamaKasir.getText() + "' ,"
                        + "gender = '" + cbGenderKaisr.getSelectedItem() + "' ,"
                        + "address = '" + taAlamatKasir.getText() + "' ,"
                        + "telp = '" + tfNoTelpProfile.getText() + "' "
                        + "where username = '" + tfUsernameProfile.getText() + "';");
            }
        } catch (SQLException e) {
            System.err.println("Query Simpan Gagal " + e);
        }

        EnableKasir(1);


    }//GEN-LAST:event_btnSimpanKasirActionPerformed

    private void CashierTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CashierTableMouseClicked
        EnableKasir(4);
    }//GEN-LAST:event_CashierTableMouseClicked

    private void btnUbahKasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahKasirActionPerformed
        EnableKasir(5);
        saveMode = false;
    }//GEN-LAST:event_btnUbahKasirActionPerformed

    private void btnHapusKasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusKasirActionPerformed
        try {
            AppDatabase.perintah.executeUpdate("delete from employee "
                    + "where username='" + tfUsernameKasir.getText() + "';");
            System.out.println("delete from employee "
                    + "where username='" + tfUsernameKasir.getText() + "';");
        } catch (SQLException e) {
            System.err.println("Query delete cashier gagal " + e);
        }
        EnableKasir(6);
    }//GEN-LAST:event_btnHapusKasirActionPerformed

    private void btnBatalKasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalKasirActionPerformed
        EnableKasir(7);
    }//GEN-LAST:event_btnBatalKasirActionPerformed

    private void btnSimpanProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanProfileActionPerformed
        if (tfUsernameProfile.getText().equals("")) {
            JOptionPane.showMessageDialog(this, " Username Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfUsernameProfile.requestFocus();

        } else if (tfPasswordProfile.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Password Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfPasswordProfile.requestFocus();
        } else if (tfNamaProfile.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Nama Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfNamaProfile.requestFocus();

        } else if (cbGenderProfile.getSelectedItem().equals("Pilih Jenis Kelamin")) {
            JOptionPane.showMessageDialog(this, "jenis Kelamin Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            cbGenderProfile.requestFocus();
        } else if (taAlamatProfile.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Alamat Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            taAlamatProfile.requestFocus();
        } else if (tfNoTelpProfile.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Alamat Tidak Boleh Kosong", "Informasi", JOptionPane.WARNING_MESSAGE);
            tfNoTelpProfile.requestFocus();
        } else {

        }

        // query simpan 
        try {
            AppDatabase.perintah.executeUpdate("update employee set "
                    + "password = '" + String.valueOf(tfPasswordProfile.getPassword()) + "',"
                    + "name = '" + tfNamaProfile.getText() + "' ,"
                    + "gender = '" + cbGenderProfile.getSelectedItem() + "' ,"
                    + "address = '" + taAlamatProfile.getText() + "' ,"
                    + "telp = '" + tfNoTelpProfile.getText() + "' "
                    + "where username = '" + tfUsernameProfile.getText() + "';");

            //
            btnSimpanProfile.requestFocus();
            refreshData(5);
            EnableProfile(1);
            bersihkan();
        } catch (SQLException e) {
            System.out.println("Query simpan profile error " + e);
        }


    }//GEN-LAST:event_btnSimpanProfileActionPerformed

    private void btnBatalProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalProfileActionPerformed
        refreshData(5);
        EnableProfile(1);
    }//GEN-LAST:event_btnBatalProfileActionPerformed

    private void btnUbahProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahProfileActionPerformed
        refreshData(6);

        EnableProfile(2);
    }//GEN-LAST:event_btnUbahProfileActionPerformed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        this.dispose();
        Login.summonLoginPanel();
    }//GEN-LAST:event_jLabel8MouseClicked

    private void cbGenderKaisrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGenderKaisrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGenderKaisrActionPerformed

    private void tfNoTelpKasirKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNoTelpKasirKeyTyped
        char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE || angka == KeyEvent.VK_ENTER)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }

        if (tfNoTelpKasir.getText().length() > 13) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "No Telp Melebihi 13 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);

            btnSimpanKasir.requestFocus();
        }
    }//GEN-LAST:event_tfNoTelpKasirKeyTyped

    private void tfUsernameKasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUsernameKasirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfUsernameKasirActionPerformed

    private void tfNoTelpProfileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNoTelpProfileKeyTyped
        if (tfNoTelpProfile.getText().length() == 13) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "No Telpon Melebihi 13 karakter", "Informasi", JOptionPane.WARNING_MESSAGE);

        }

        char angka = evt.getKeyChar();

        if (!(Character.isDigit(angka) || angka == KeyEvent.VK_BACK_SPACE || angka == KeyEvent.VK_DELETE || angka == KeyEvent.VK_ENTER)) {

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(this, "Inputan Harus Berbentuk Angka", "Informasi", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tfNoTelpProfileKeyTyped

    private void tfNoTelpMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNoTelpMemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNoTelpMemberActionPerformed

    private void EnableKasir(int mode) {
        if (mode == 1) {
            //windows opened
            tfUsernameKasir.setEditable(false);
            tfNamaKasir.setEditable(false);
            tfPasswordKasir.setEditable(false);
            cbGenderKaisr.setEnabled(false);
            taAlamatKasir.setEnabled(false);
            tfNoTelpKasir.setEditable(false);

            btnBaruKasir.setEnabled(true);
            btnSimpanKasir.setEnabled(false);
            btnUbahKasir.setEnabled(false);
            btnHapusKasir.setEnabled(false);
            btnBatalKasir.setEnabled(false);
            btnBaruKasir.requestFocus();
            bersihkan();

        } else if (mode == 2) {
            //btnBaru
            tfUsernameKasir.setEditable(true);
            tfNamaKasir.setEditable(true);
            tfPasswordKasir.setEditable(true);
            cbGenderKaisr.setEnabled(true);
            taAlamatKasir.setEnabled(true);
            tfNoTelpKasir.setEditable(true);

            btnBaruKasir.setEnabled(false);
            btnSimpanKasir.setEnabled(true);
            btnUbahKasir.setEnabled(false);
            btnHapusKasir.setEnabled(false);
            btnBatalKasir.setEnabled(true);
            btnSimpanKasir.requestFocus();
            tfUsernameKasir.requestFocus();
            tfPasswordProfile.requestFocus();

        } else if (mode == 4) {

            //klik tabel
            tfUsernameKasir.setEditable(false);
            tfNamaKasir.setEditable(false);
            tfPasswordKasir.setEditable(false);
            cbGenderKaisr.setEnabled(false);
            taAlamatKasir.setEnabled(false);
            tfNoTelpKasir.setEditable(false);

            btnBaruKasir.setEnabled(false);
            btnSimpanKasir.setEnabled(false);
            btnUbahKasir.setEnabled(true);
            btnHapusKasir.setEnabled(true);
            btnBatalKasir.setEnabled(true);
            btnUbahKasir.requestFocus();

        } else if (mode == 5) {
            //ubah
            tfUsernameKasir.setEditable(false);
            tfPasswordKasir.setEditable(true);
            cbGenderKaisr.setEnabled(true);
            taAlamatKasir.setEnabled(true);
            tfNoTelpKasir.setEditable(true);
            tfNamaKasir.setEditable(true);

            btnBaruKasir.setEnabled(false);
            btnSimpanKasir.setEnabled(true);
            btnUbahKasir.setEnabled(false);
            btnHapusKasir.setEnabled(false);
            btnBatalKasir.setEnabled(true);
            btnSimpanKasir.requestFocus();
            tfPasswordKasir.requestFocus();

        } else if (mode == 6) {
            //hapus
            tfUsernameKasir.setEditable(false);
            tfNamaKasir.setEditable(false);
            tfPasswordKasir.setEditable(false);
            cbGenderKaisr.setEnabled(false);
            taAlamatKasir.setEnabled(false);
            tfNoTelpKasir.setEditable(false);

            btnBaruKasir.setEnabled(true);
            btnSimpanKasir.setEnabled(false);
            btnUbahKasir.setEnabled(false);
            btnHapusKasir.setEnabled(false);
            btnBatalKasir.setEnabled(false);
            btnBatalKasir.requestFocus();

        } else if (mode == 7) {

            //batal
            tfUsernameKasir.setEditable(false);
            tfNamaKasir.setEditable(false);
            tfPasswordKasir.setEditable(false);
            cbGenderKaisr.setEnabled(false);
            taAlamatKasir.setEnabled(false);
            tfNoTelpKasir.setEditable(false);

            btnBaruKasir.setEnabled(true);
            btnSimpanKasir.setEnabled(false);
            btnUbahKasir.setEnabled(false);
            btnHapusKasir.setEnabled(false);
            btnBatalKasir.setEnabled(false);
            btnSimpanKasir.requestFocus();
            tfUsernameKasir.requestFocus();
            bersihkan();

        }

    }

    private void EnableMember(int mode) {
        if (mode == 1) {

            //windows opened
            tfMemberID.setEditable(false);
            tfNamaMember.setEditable(false);
            cbJenisKleaminMember.setEnabled(false);
            taAlamatMember.setEnabled(false);

            tfNoTelpMember.setEditable(false);

            btnBaruMember.setEnabled(true);
            btnSimpanMember.setEnabled(false);
            btnUbahMember.setEnabled(false);
            btnHapusMember.setEnabled(false);
            btnBatalMember.setEnabled(false);

            btnBaruMember.requestFocus();
            bersihkan();

        } else if (mode == 2) {

            //btn baru ketika di klik 
            tfMemberID.setEditable(true);
            tfNamaMember.setEditable(true);
            cbJenisKleaminMember.setEnabled(true);
            taAlamatMember.setEnabled(true);
            tfNoTelpMember.setEditable(true);

            btnBaruMember.setEnabled(false);
            btnSimpanMember.setEnabled(true);
            btnUbahMember.setEnabled(false);
            btnHapusMember.setEnabled(false);
            btnBatalMember.setEnabled(true);
            btnSimpanMember.requestFocus();
            tfMemberID.requestFocus();
            bersihkan();

        } else if (mode == 3) {
            //btn simpan ketika di klik 
            tfMemberID.setEditable(false);
            tfNamaMember.setEditable(false);
            cbJenisKleaminMember.setEnabled(false);
            taAlamatMember.setEnabled(false);
            tfNoTelpMember.setEditable(false);

            btnBaruMember.setEnabled(true);
            btnSimpanMember.setEnabled(false);
            btnUbahMember.setEnabled(false);
            btnHapusMember.setEnabled(false);
            btnBatalMember.setEnabled(false);
            btnBaruMember.requestFocus();

        } else if (mode == 4) {
            //klik di tabel
            tfMemberID.setEditable(false);
            tfNamaMember.setEditable(true);
            cbJenisKleaminMember.setEnabled(true);
            taAlamatMember.setEnabled(true);
            tfNoTelpMember.setEditable(true);

            btnBaruMember.setEnabled(false);
            btnSimpanMember.setEnabled(false);
            btnUbahMember.setEnabled(true);
            btnHapusMember.setEnabled(true);
            btnBatalMember.setEnabled(true);
            btnUbahMember.requestFocus();

        } else if (mode == 5) {

            //ubah
            tfMemberID.setEditable(false);
            tfNamaMember.setEditable(true);
            cbJenisKleaminMember.setEnabled(true);
            taAlamatMember.setEnabled(true);
            tfNoTelpMember.setEditable(true);

            btnBaruMember.setEnabled(false);
            btnSimpanMember.setEnabled(true);
            btnUbahMember.setEnabled(false);
            btnHapusMember.setEnabled(false);
            btnBatalMember.setEnabled(true);
            btnSimpanMember.requestFocus();
            tfNamaMember.requestFocus();

        } else if (mode == 6) {
            //hapus
            tfMemberID.setEditable(false);
            tfNamaMember.setEditable(false);
            cbJenisKleaminMember.setEnabled(false);
            taAlamatMember.setEnabled(false);
            tfNoTelpMember.setEditable(false);

            btnBaruMember.setEnabled(true);
            btnSimpanMember.setEnabled(false);
            btnUbahMember.setEnabled(false);
            btnHapusMember.setEnabled(false);
            btnBatalMember.setEnabled(false);
            btnBaruMember.requestFocus();

        } else if (mode == 7) {

            //batal
            tfMemberID.setEditable(false);
            tfNamaMember.setEditable(false);
            cbJenisKleaminMember.setEnabled(false);
            taAlamatMember.setEditable(false);
            tfNoTelpMember.setEditable(false);

            btnBaruMember.setEnabled(true);
            btnSimpanMember.setEnabled(false);
            btnUbahMember.setEnabled(false);
            btnHapusMember.setEnabled(false);
            btnBatalMember.setEnabled(false);
            btnSimpanMember.requestFocus();
            tfMemberID.requestFocus();
            bersihkan();

        }
    }

    private void EnableProfile(int model) {
        //ketika frmae pertama kali di buka
        if (model == 1) {
            //ketika frmae pertama kali di buka
            btnUbahProfile.setEnabled(true);
            btnSimpanProfile.setEnabled(false);
            btnBatalProfile.setEnabled(false);

            tfUsernameProfile.setEditable(false);
            tfNamaProfile.setEditable(false);
            tfPasswordProfile.setEditable(false);
            cbGenderProfile.setEditable(false);
            taAlamatProfile.setEditable(false);
            tfNoTelpProfile.setEditable(false);

        } else if (model == 2) {
            //btn ubah 
            btnUbahProfile.setEnabled(false);
            btnSimpanProfile.setEnabled(true);
            btnBatalProfile.setEnabled(true);

            tfUsernameProfile.setEditable(false);
            tfNamaProfile.setEditable(true);
            tfPasswordProfile.setEditable(true);
            cbGenderProfile.setEditable(true);
            taAlamatProfile.setEditable(true);
            tfNoTelpProfile.setEditable(true);
            tfPasswordProfile.requestFocus();

        }

    }

    private void bersihkan() {

        //profile
        tfUsernameProfile.setText("");
        tfPasswordProfile.setText("");
        tfNamaProfile.setText("");
        cbGenderProfile.setSelectedItem("Pilih Jenis Kelamin");
        taAlamatProfile.setText("");
        taAlamatProfile.setText("");
        tfNoTelpProfile.setText("");

        //member
        tfMemberID.setText("");
        tfNamaMember.setText("");
        cbJenisKleaminMember.setSelectedItem("Pilih Jenis Kelamin");
        taAlamatMember.setText("");
        tfNoTelpMember.setText("");

        //cashier
        tfUsernameKasir.setText("");
        tfPasswordKasir.setText("");
        tfNamaKasir.setText("");
        cbGenderKaisr.setSelectedItem("Pilih Jenis Kelamin");
        taAlamatKasir.setText("");
        tfNoTelpKasir.setText("");

    }

    private void refreshData(int mode) {
        if (mode == 1) { // untuk refresh data table data transaksi
            try {
                dataTransactionTable.getDataVector().removeAllElements();
                dataTransactionTable.fireTableDataChanged();
                hasil = AppDatabase.perintah.executeQuery("Select invoice_number, employee.name as cashier, "
                        + "customer.name as member, date, product.name as product, qty, price*qty as pembayaran "
                        + "from customer join invoice using(customer_id) "
                        + " join employee using(username) "
                        + " join transaction using(invoice_number)"
                        + " join product using(product_id)"
                        + " order by invoice_number");
                while (hasil.next()) {
                    dataTransactionTable.addRow(new Object[]{
                        hasil.getString("invoice_number"),
                        hasil.getString("cashier"),
                        hasil.getString("member"),
                        hasil.getString("date"),
                        hasil.getString("product"),
                        hasil.getString("qty"),
                        hasil.getString("pembayaran")
                    });
                }
            } catch (SQLException e) {
                System.err.println("Query Select Data Transaksi Gagal");
            }
        } else if (mode == 2) { //untuk refresh table data product
            dataProductTable.getDataVector().removeAllElements();
            dataProductTable.fireTableDataChanged();
            try {
                hasil = AppDatabase.perintah.executeQuery("Select * from product;");
                while (hasil.next()) {
                    dataProductTable.addRow(new Object[]{
                        hasil.getString("product_id"),
                        hasil.getString("name"),
                        hasil.getString("brand"),
                        hasil.getString("type"),
                        hasil.getString("stok")
                    });
                }

            } catch (SQLException e) {
                System.err.println("Query Select Data Product Gagal");
            }
        } else if (mode == 3) { //untuk refresh data cashier
            cashierTable.getDataVector().removeAllElements();
            cashierTable.fireTableDataChanged();
            try {
                hasil = AppDatabase.perintah.executeQuery("select username, name, gender, address, telp from employee where level ='cashier';");
                while (hasil.next()) {
                    cashierTable.addRow(new Object[]{
                        hasil.getString("username"),
                        hasil.getString("name"),
                        hasil.getString("gender"),
                        hasil.getString("address"),
                        hasil.getString("telp")
                    });
                }

            } catch (SQLException e) {
                System.err.println("Query Select cashier gagal");
            }
        } else if (mode == 4) { // untuk refresh data table member
            memberTable.getDataVector().removeAllElements();
            memberTable.fireTableDataChanged();
            try {
                hasil = AppDatabase.perintah.executeQuery("select customer_id, name, gender, address, telp from customer;");
                while (hasil.next()) {
                    memberTable.addRow(new Object[]{
                        hasil.getString("customer_id"),
                        hasil.getString("name"),
                        hasil.getString("gender"),
                        hasil.getString("address"),
                        hasil.getString("telp")
                    });
                }

            } catch (SQLException e) {
                System.err.println("Query Select member gagal");
            }
        } else if (mode == 5) { // untuk refresh data profile
            taProfile.setText("");
            try {
                hasil = AppDatabase.perintah.executeQuery("select * from employee "
                        + "where username='" + Encapsulation.getUsername() + "';");
                hasil.next();
                taProfile.setText("Username\n\n"
                        + hasil.getString("username")
                        + "\n\nNama\n\n"
                        + hasil.getString("name")
                        + "\n\nJenis Kelamin\n\n"
                        + hasil.getString("gender")
                        + "\n\nAlamat\n\n"
                        + hasil.getString("address")
                        + "\n\nNo Telpon\n\n"
                        + hasil.getString("telp"));
            } catch (Exception e) {
                System.out.println("Query Select Profile gagal");
            }
        } else if (mode == 6) {//mode 6 untuk refresh data pada text field profile
            taProfile.setText("");
            try {
                hasil = AppDatabase.perintah.executeQuery("select * from employee "
                        + "where username='" + Encapsulation.getUsername() + "';");
                hasil.next();
                tfUsernameProfile.setText(hasil.getString("username"));
                tfPasswordProfile.setText(hasil.getString("password"));
                tfNamaProfile.setText(hasil.getString("name"));
                cbGenderProfile.setSelectedItem(hasil.getString("gender"));
                taAlamatProfile.setText(hasil.getString("address"));
                tfNoTelpProfile.setText(hasil.getString("telp"));
            } catch (Exception e) {
                System.out.println("Query Select Profile gagal");
            }
        }
    }

    private void Date() {
        Date data = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd-H:m:s");
        String tgl_jam = sdf.format(data);

        jLabel6.setText(tgl_jam);

    }

    public static void summonAdminPanel() {
        AdminPanel adminPanel = new AdminPanel();
        adminPanel.setSize(1150, 695);
        adminPanel.setLocationRelativeTo(null);
        adminPanel.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                summonAdminPanel();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CashierPanel;
    private javax.swing.JTable CashierTable;
    private javax.swing.JPanel DataPanel;
    private javax.swing.JTable DataProductTable;
    private javax.swing.JTable DataTransactionTable;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel MainPanelAdmin;
    private javax.swing.JPanel MemberPanel;
    private javax.swing.JTable MemberTable;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JPanel ProductTablePanel;
    private javax.swing.JPanel ProfilePanel;
    private javax.swing.JPanel TransactionTablePanel;
    private javax.swing.JPanel WelcomePanel;
    private javax.swing.JButton btnBaruKasir;
    private javax.swing.JButton btnBaruMember;
    private javax.swing.JButton btnBatalKasir;
    private javax.swing.JButton btnBatalMember;
    private javax.swing.JButton btnBatalProfile;
    private javax.swing.JButton btnHapusKasir;
    private javax.swing.JButton btnHapusMember;
    private javax.swing.JButton btnSimpanKasir;
    private javax.swing.JButton btnSimpanMember;
    private javax.swing.JButton btnSimpanProfile;
    private javax.swing.JButton btnUbahKasir;
    private javax.swing.JButton btnUbahMember;
    private javax.swing.JButton btnUbahProfile;
    private javax.swing.JComboBox<String> cbGenderKaisr;
    private javax.swing.JComboBox<String> cbGenderProfile;
    private javax.swing.JComboBox<String> cbJenisKleaminMember;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JLabel imgWelcome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea taAlamatKasir;
    private javax.swing.JTextArea taAlamatMember;
    private javax.swing.JTextArea taAlamatProfile;
    private javax.swing.JTextArea taProfile;
    private javax.swing.JTextField tfMemberID;
    private javax.swing.JTextField tfNamaKasir;
    private javax.swing.JTextField tfNamaMember;
    private javax.swing.JTextField tfNamaProfile;
    private javax.swing.JTextField tfNoTelpKasir;
    private javax.swing.JTextField tfNoTelpMember;
    private javax.swing.JTextField tfNoTelpProfile;
    private javax.swing.JPasswordField tfPasswordKasir;
    private javax.swing.JPasswordField tfPasswordProfile;
    private javax.swing.JTextField tfUsernameKasir;
    private javax.swing.JTextField tfUsernameProfile;
    private javax.swing.JLabel tvCashier;
    private javax.swing.JLabel tvData;
    private javax.swing.JLabel tvDataProduct;
    private javax.swing.JLabel tvDataTransaction;
    private javax.swing.JLabel tvMember;
    private javax.swing.JLabel tvUser;
    // End of variables declaration//GEN-END:variables
}
